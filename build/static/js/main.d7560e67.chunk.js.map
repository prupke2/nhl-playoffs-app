{"version":3,"sources":["assets/hockey_icon_large.png","../node_modules/typescript/lib sync","components/ByeTeams/ByeTeams.jsx","components/QualifyingRound/Matchups/Matchups.jsx","components/Results/QualifierResults.jsx","components/QualifyingRound/QualifyingRound.jsx","components/Results/RoundResults.jsx","components/Results/Results.jsx","components/Leaderboard/Leaderboard.jsx","components/SemiFinals/SemiFinals.jsx","components/HelperComponents/HelperComponents.jsx","components/MatchupWrapper/Matchups.jsx","components/MatchupWrapper/MatchupWrapper.jsx","components/MatchupWrapper/MatchupInstructions/MatchupInstructions.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Component","Matchups","teamSelectHandler","this","props","teams","map","team","index","key","className","matchup","selected","conference","onClick","short","seed","draggable","src","alt","title","name","QualifierResults","userPicks","user","points","RoundResults","console","log","JSON","stringify","picks","picksPerUser","Leaderboard","defaultIndex","quarterfinalPicks","semifinalPicks","leaders","Sidebar","image","content","DisabledButton","disabled","label","Button","qualifyingTeamsStatus","saveStatus","Fragment","byeTeamsStatus","event","save","Message","saveMessage","status","message","Input","nameChangeHandler","updateName","nameChanged","target","value","type","placeholder","defaultValue","onChange","required","nameStatus","Footer","teamData","round","MatchupWrapper","bind","setState","teamShort","state","filter","saveTeams","MatchupInstructions","App","byeTeams","qualifyingTeams","club","getTime","fetch","method","then","results","json","data","currentTime","time","getLeaders","getUserPicks","getQuarterfinalPicks","getSemifinalPicks","checkIfNameIsTaken","checkIfReady","check","getCookie","count","i","saveByesToState","saveQualifyingTeamsToState","saveConferenceSemiFinalsToState","getRequests","s2","s1","window","location","search","substring","length","split","r","decodeURIComponent","toLowerCase","saveRound","body","saveToDB","setCookie","cookieName","ca","document","cookie","c","charAt","indexOf","string","expiry","Date","setDate","getDate","hockeyIcon","conferenceSemiFinals","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d7560e67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hockey_icon_large.cc443e14.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 42;","import React, { Component } from 'react';\nimport './ByeTeams.css';\nimport byeTeamData from './byeTeamData.json';\n\nexport default class ByeTeams extends Component {\n\n    constructor() {\n\t\tsuper();\n        this.state = byeTeamData;\n    }\n \n\tonDragStart = (event, team) => {\n        event.dataTransfer.setData(\"draggedTeamShort\", team.short);\n        event.dataTransfer.setData(\"draggedTeamType\", team.type);\n        event.dataTransfer.setData(\"draggedTeamConference\", team.conference);\n        const eligibleBox = team.type + \"-droppable-box\";\n        const eligibleSpots = document.getElementById(eligibleBox);\n        if (eligibleSpots !== null) {\n            // put a green box around the spots you can drag it to\n            eligibleSpots.style.border = \"2px solid var(--eligible)\";\n        }\n\n        // sets the cursor to a closed hand while they are grabbing a box\n        const box = document.getElementById(team.id);\n        box.style.cursor = \"grabbing\";\n    }\n    \n\tonDragOver = (event) => {\n        event.preventDefault();\n    }\n    \n    onDragEnd = (event, id) => {\n\n        const eastBoxes = document.getElementById(\"east-droppable-box\");\n        const westBoxes = document.getElementById(\"west-droppable-box\");\n        eastBoxes.style.border = \"2px solid black\";\n        westBoxes.style.border = \"2px solid black\";\n\n        // in case the user drops a box in the wrong spot, this sets the cursor back to an open hand instead of closed\n        const box = document.getElementById(id);\n        box.style.cursor = \"grab\";\n    }\n\n\tonDrop = (event, droppedTeamType) => {\n\n        event.preventDefault();\n        const droppedTeamConference = droppedTeamType.slice(0,4);\n\n        let draggedTeamShort = event.dataTransfer.getData(\"draggedTeamShort\");\n        let draggedTeamType = event.dataTransfer.getData(\"draggedTeamType\");\n        let draggedTeamConference = event.dataTransfer.getData(\"draggedTeamConference\");\n\n        // when dropping anywhere, put all borders back to normal\n        const eastBoxes = document.getElementById(\"east-droppable-box\");\n        const westBoxes = document.getElementById(\"west-droppable-box\");\n        eastBoxes.style.border = \"2px solid black\";\n        westBoxes.style.border = \"2px solid black\";\n\n        // if east is dragged into west (or vice versa), don't allow it to stay.\n        if (draggedTeamConference !== droppedTeamConference) {\n            // console.log(draggedTeamConference + \" does not match: \" + droppedTeamConference);\n            return;\n        } else {\n            // console.log(\"type \" + draggedTeamConference + \" matches conference: \" + droppedTeamConference);\n            let teams;\n\n            // if team was dropped from the byes area\n            if (draggedTeamType === droppedTeamConference) {\n\n                // cycle through the teams and update their types\n                teams = this.state.byeSpots.teams.filter((team) => {\n                    if (team.type === droppedTeamType) {\n                        // if there is a team in this slot already, move it back to the byes area\n                        team.type = draggedTeamType;\n                    }\n                    if (team.short === draggedTeamShort) {\n                        // update the dragged team's type so it stays in the dropped slot\n                        team.type = droppedTeamType;\n                    }\n                    return team;\n                });\n            } else {\n                // team was dragged from one slot to another\n\n                // cycle through the teams to update the dragged and dropped slot types\n                teams = this.state.byeSpots.teams.filter((team) => {\n                    if (team.type === droppedTeamType && droppedTeamType !== \"east\" && droppedTeamType !== \"west\") {\n                        // console.log(team.short + \" moving to slot: \" + draggedTeamType);\n                        // update team in target spot to the dragged team's old spot\n                        team.type = draggedTeamType;\n                    }\n                    if (team.short === draggedTeamShort) {\n                        // console.log(team.short + \" moving to slot: \" + droppedTeamType);\n\n                        // update the dragged team's type so it stays in the dropped slot\n                        team.type = droppedTeamType;\n                    }\n                    return team;\n                });\n            };\n\n            this.setState({\n                ...this.state,\n                teams\n            });\n\n            let saveByes = this.props.saveByes;\n            saveByes(teams);\n        };\n    }\n\n\trender() {\n\t\tvar columns = {\n          west: [],\n          west1: [],\n          west2: [],\n          west3: [],\n          west4: [],\n          east1: [],\n          east2: [],\n          east3: [],\n          east4: [],\n          east: []\n        }\n\n\t\tthis.state.byeSpots.teams.forEach ((team) => {\n        columns[team.type].push(\n            <div key={team.id} \n                id={team.id}\n                onDragStart = {(event) => this.onDragStart(event, team)}\n                onDragOver = {(event) => this.onDragOver(event)}\n                onDragEnd = {(event) => this.onDragEnd(event, team.id)}\n                draggable\n                className=\"team-wrapper\"\n\t\t    >\n                <div className=\"logo-wrapper\">\n                    <div className=\"seed\">\n                        {team.seed}   \n                    </div>\n                    <img className=\"team-logo\" \n                        draggable=\"false\"\n                        src={`/teamLogos/${team.short}.png`}\n                        alt={team.short} \n                        title={team.name}\n                    />\n                </div>\n                <div className=\"team-info\">\n                    <span className=\"team-short\">{team.short}</span>\n                </div>\n\t\t      \n\t\t    </div>\n\t\t  );\n        });\n\n\t    return (\n            <React.Fragment>\n                <h2 className=\"round-robin\">Bye Team Round Robin</h2>\n                <div className=\"instructions\">\n                    <ul>\n                        <li><span className=\"scoring\">Bonus round -</span>  Drag and drop the teams in the order you think they will finish.</li>\n                        <li>\n                            <span className=\"scoring\">Scoring: </span> \n                            <span className=\"num\">2 points</span> for each conference that has the order correct (must be perfect).\n                        </li>   \n                    </ul>\n\n                </div>\n                <section className=\"bye-team-round\">\n\n                    <div className=\"drag-container drag-container-west\">\n                        <div className=\"drag-west\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>{this.onDrop(event, \"west\")}}>\n                            <h3 className=\"header align-right\">west byes</h3>\n                        {columns.west}\n                        </div>\n                    </div>\n\n                    <div className=\"drop-container\" id=\"west-droppable-box\">\n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west1\")}>\n                            <span className=\"header small-header\">west 1</span>\n                            {columns.west1}\n                        </div>\t       \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west2\")}>\n                            <span className=\"header small-header\">west 2</span>\n                            {columns.west2}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west3\")}>\n                            <span className=\"header small-header\">west 3</span>\n                            {columns.west3}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west4\")}>\n                            <span className=\"header small-header\">west 4</span>\n                            {columns.west4}\n                        </div>\t\n                    </div>  \n\n                    <div className=\"drop-container\" id=\"east-droppable-box\">\n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east1\")}>\n                            <span className=\"header small-header\">east 1</span>\n                            {columns.east1}\n                        </div>\t       \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east2\")}>\n                            <span className=\"header small-header\">east 2</span>\n                            {columns.east2}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east3\")}>\n                            <span className=\"header small-header\">east 3</span>\n                            {columns.east3}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east4\")}>\n                            <span className=\"header small-header\">east 4</span>\n                            {columns.east4}\n                        </div>\t\n                    </div>  \n\n                    <div className=\"drag-container drag-container-east\">\n                        <div className=\"drag-east\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>{this.onDrop(event, \"east\")}}>\n                            <h3 className=\"header align-left\">east byes</h3>\n                            {columns.east}\n                        </div>\n                    </div>\n\n                </section>\n\n            </React.Fragment>\n\n\t    );\n  \t}\n}\n","import React, { Component } from 'react';\nimport './Matchups.css';\n\n\nexport default class Matchups extends Component {\n\n    render() {\n        var teamSelectHandler = this.props.teamSelectHandler;\n\n        return this.props.teams.teams.map((team, index) => {\n            return (\n                <li \n                    key={team.id} \n                    className={`matchup-${team.matchup} ${team.selected} ${team.conference}`}\n                    onClick={() => teamSelectHandler(team.short, team.matchup)}\n                >\n                    <div className=\"logo-wrapper\">\n                        <div className=\"seed\">\n                            {team.seed}\n                        </div>\n                        <img className=\"team-logo\" \n                            draggable=\"false\"\n                            src={`/teamLogos/${team.short}.png`}\n                            alt={team.short} \n                            title={team.name}\n                        />\n                    </div>\n                    <div className=\"team-info\">\n                        <span className=\"team-short\">{team.short}</span>\n                    </div>\n                </li>\n              );\n        });\n    }\n}\n","import React, { Component } from 'react';\n// import './Leaderboard.css';\n\nexport default class QualifierResults extends Component {\n\n  render() {\n\t\t// console.log(\"props: \" + JSON.stringify(this.props, null, 4))\n\t\tif (this.props.userPicks !== null) {\n\t\t\treturn (\n\t\t\t\tthis.props.userPicks.map(\n\t\t\t\t\t(team, index) => {\n\t\t\t\t\t\tif (index % 10 === 0) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t<h3 className=\"user-name\">{team.user}</h3>\n\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"round-robin\">East round robin:\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"points\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (team.points === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"❌\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!team.points)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"--\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"✅ \" + \"+\" + team.points\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else if (index % 10 - 1 === 0) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"round-robin\">West round robin:\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"points\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (team.points === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"❌\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!team.points)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"--\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"✅ \" + \"+\" + team.points\n\t\t\t\t\t\t\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<div className=\"round-robin\">Qualifying Round: </div>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\telse {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"logo-wrapper team-points\">\t\n\t\t\t\t\t\t\t\t\t\t\t<img className=\"team-logo\" \n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/teamLogos/${team.team}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\talt={team.team} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={team.team}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"points\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (team.points === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"❌\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!team.points)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"--\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"✅ \" + \"+\" + team.points\n\t\t\t\t\t\t\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t// { () => { return \"</div>\" } \n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n    } else {\n      return (\n        <div />\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './QualifyingRound.css';\n// import QualifyingRoundData from './qualifyingRoundData.json';\nimport QuarterfinalRoundData from './quarterfinalRoundData.json';\nimport Matchups from './Matchups/Matchups';\n\nexport default class QualifyingRound extends Component {\n    constructor() {\n\t\tsuper();\n        this.state = QuarterfinalRoundData;\n        this.teamSelectHandler = this.teamSelectHandler.bind(this);\n        // this.saveTeamsHandler = this.saveTeamsHandler.bind(this);\n    }\n\n    teamSelectHandler(teamShort, matchup) {\n\n        let teams = this.state.teams.filter((team) => {\n\n            if (team.short === teamShort) {\n                team.selected = true;\n            }\n            if (team.matchup === matchup && team.short !== teamShort) {\n                team.selected = false;\n            }\n\n            return team;\n        });\n\n        this.setState({\n            ...this.state,\n            teams\n        })\n\n        let saveQualifiers = this.props.saveQualifiers;\n        saveQualifiers(this.state);\n        // console.log(\"state: \" + JSON.stringify(this.state, null, 4))\n        // console.log(\"this.state.user: \" + this.state.user);\n\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"instructions\">\n                    <ul>\n                        <li>For each matchup, click on the team you think will win.</li>\n                        <li>\n                            <span className=\"scoring\">Scoring: </span> \n                            <span className=\"num\">1 point</span> for each correct pick, and &nbsp;\n                            <span className=\"num\">1 bonus point</span> for picking a&nbsp;\n                            <div className=\"seed inline-seed\">7</div> or lower seed upset.\n                        </li>\n                    </ul>\n                </div>\n                <section className=\"qualifying-round\">\n                    <div>\n                        <h3 className=\"header align-left\">west matchups</h3>\n                        <h3 className=\"header align-left\" id=\"east-matchups\">east matchups</h3>\n\n                        <ul className=\"matchups\">\n                            { \n                                React.Children.toArray(\n                                    <Matchups\n                                        teams={this.state}\n                                        teamSelectHandler={this.teamSelectHandler}\n                                    ></Matchups>\n                                )\n                            }\n                        </ul>\n                    </div>\n\n                </section>\n\n            </React.Fragment>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n// import './Leaderboard.css';\n\nexport default class RoundResults extends Component {\n\n  render() {\n\t\tconsole.log(\"props: \" + JSON.stringify(this.props, null, 4))\n\t\tif (this.props.picks !== null) {\n\t\t\treturn (\n\t\t\t\tthis.props.picks.map(\n\t\t\t\t\t(team, index) => {\n            if (index % this.props.picksPerUser === 0) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t<h3 className=\"user-name\">{team.name}</h3>\n                <div className=\"logo-wrapper team-points\">\t\n                    <img className=\"team-logo\" \n                        src={`/teamLogos/${team.team}.png`}\n                        alt={team.team} \n                        title={team.team}\n                    />\n                    <div className=\"points\">\n                      {\n                        (() => {\n                            if (team.points === 0)\n                                return \"❌\"\n                            if (!team.points)\n                                return \"--\"\n                            else\n                                return \"✅ \" + \"+\" + team.points\n                        })()\n                      }\n                    </div>\n                  </div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n              return (\n                <li key={index}>\n                  <div className=\"logo-wrapper team-points\">\t\n                    <img className=\"team-logo\" \n                        src={`/teamLogos/${team.team}.png`}\n                        alt={team.team} \n                        title={team.team}\n                    />\n                    <div className=\"points\">\n                      {\n                        (() => {\n                            if (team.points === 0)\n                                return \"❌\"\n                            if (!team.points)\n                                return \"--\"\n                            else\n                                return \"✅ \" + \"+\" + team.points\n                        })()\n                      }\n                    </div>\n\n                  </div>\t\t\t\n                </li>\n              );\n            }\n          }\n        )\n\t\t\t)\n    } else {\n      return (\n        <div />\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport QualifierResults from './QualifierResults';\nimport RoundResults from './RoundResults';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nexport default class Leaderboard extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Tabs defaultIndex={2}>\n\t\t\t\t<TabList>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Tab><div className=\"tab small-tab\">Qualifiers</div></Tab>\n\t\t\t\t\t\t\t<Tab><div className=\"tab small-tab\">Conf Quarterfinals</div></Tab>\n\t\t\t\t\t\t\t<Tab><div className=\"tab small-tab\">Conf Semifinals</div></Tab>\n\t\t\t\t\t</div>\n\t\t\t\t</TabList>\n\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<QualifierResults \n\t\t\t\t\t\tuserPicks = {this.props.userPicks}\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<RoundResults \n\t\t\t\t\t\tpicks = {this.props.quarterfinalPicks}\n\t\t\t\t\t\tpicksPerUser = {8}\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<RoundResults \n\t\t\t\t\t\tpicks = {this.props.semifinalPicks}\n\t\t\t\t\t\tpicksPerUser = {4}\n\t\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t</Tabs>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport './Leaderboard.css';\n\nexport default class Leaderboard extends Component {\n\n\trender() {\n    if (this.props.leaders !== null) {\n\t\t\treturn (\n\t\t\t\tthis.props.leaders.map(\n          (team, index) => {\n\t\t\t\t\t\treturn (\n              <li key={index}>\n                <div>{team.name}</div>\n                <div>{team.points}</div>\n              </li>\n            )\n          }\n        )\n      )\n    } else {\n      return (\n        <div />\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './semiFinals.css';\nimport SemiFinalData from './semiFinalRoundData.json';\nimport Matchups from '../QualifyingRound//Matchups/Matchups';\n\nexport default class SemiFinals extends Component {\n    constructor() {\n\t\tsuper();\n        this.state = SemiFinalData;\n        this.teamSelectHandler = this.teamSelectHandler.bind(this);\n        // this.saveTeamsHandler = this.saveTeamsHandler.bind(this);\n    }\n\n    teamSelectHandler(teamShort, matchup) {\n\n        let teams = this.state.teams.filter((team) => {\n\n            if (team.short === teamShort) {\n                team.selected = true;\n            }\n            if (team.matchup === matchup && team.short !== teamShort) {\n                team.selected = false;\n            }\n\n            return team;\n        });\n\n        this.setState({\n            ...this.state,\n            teams\n        })\n\n        let saveConferenceSemiFinals = this.props.saveConferenceSemiFinals;\n        saveConferenceSemiFinals(this.state);\n        // console.log(\"state: \" + JSON.stringify(this.state, null, 4))\n        // console.log(\"this.state.user: \" + this.state.user);\n\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"instructions\">\n                    <ul>\n                        <li>For each matchup, click on the team you think will win.</li>\n                        <li>\n                            <span className=\"scoring\">Scoring: </span> \n                            <span className=\"num\">1 point</span> for each correct pick in the conference semifinals.<br />\n                            <span className=\"num\">2 points</span> for each correct pick in the conference finals.<br />\n                            <span className=\"num\">3 points</span> for each correct pick in the finals.<br />\n                            <span className=\"num\">4 points</span> for correctly picking the Stanley Cup winner.<br />\n                        </li>\n                    </ul>\n                </div>\n                <section className=\"qualifying-round semifinals\">\n                    <div>\n                        <h3 className=\"header align-left\">west matchups</h3>\n                        <h3 className=\"header align-left\" id=\"east-matchups\">east matchups</h3>\n\n                        <ul className=\"matchups\">\n                            { \n                              React.Children.toArray(\n                                <Matchups\n                                    teams={this.state}\n                                    teamSelectHandler={this.teamSelectHandler}\n                                ></Matchups>\n                              )\n                            }\n                        </ul>\n                    </div>\n\n                </section>\n\n            </React.Fragment>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport function Sidebar(props) {\n    if (props.image) {\n        return (\n            <aside className={props.className}>\n                <img src={props.image} className=\"logo\" alt=\"Hockey logo\" />\n            </aside>\n        );\n    }\n    return (\n        <aside className={props.className}>\n            {props.content}\n        </aside>\n    )\n}\n\nexport function DisabledButton(props) {\n    return (\n        <button disabled={true} className={props.className} title=\"Finish making your picks and enter your name!\">\n            {props.label}\n        </button>)\n    ;    \n}\n\nexport function Button(props) {\n\n    const saveHandler = (event) => {\n        let save = props.save;\n        save();\n    }\n\n    if (\n        // props.byeTeamsStatus === \"ready\" \n        props.qualifyingTeamsStatus === \"ready\" \n        // && props.nameStatus === \"available\"\n        && props.saveStatus !== \"saved\"\n        ) {\n        return (\n            <React.Fragment>\n\n                <button \n                    className={props.byeTeamsStatus}\n                    onClick={saveHandler}\n                >\n                    {props.label}\n                </button>\n                <Message\n                    saveStatus={props.saveStatus}\n                    saveMessage={props.saveMessage}\n\n                />\n            </React.Fragment>\n\n        );\n    }\n    \n    return (\n        <React.Fragment>\n            <DisabledButton \n                className=\"disabled-button\"\n                label={props.label}\n            />\n            <Message\n                saveStatus={props.saveStatus}\n                saveMessage={props.saveMessage}\n            />\n        </React.Fragment>\n    );\n}\n\nexport function Message(props) {\n    if (props.status === null || props.saveStatus === null) {\n        return \" \"\n    }\n\n    let message = \"🚫\"\n    if (props.status === \"available\" || props.saveStatus === \"saved\") {\n        message = \"✅\"\n        console.log(\"props.saveStatus: \" + props.saveStatus + \", props.saveMessage: \" + props.saveMessage);\n    }\n    return (\n        <div className={`status ${props.status} ${props.saveStatus}`}>\n            {message} {props.saveMessage}\n        </div>\n    );\n}\n\nexport function Input(props) {\n\n    const nameChangeHandler = (event) => {\n        let updateName = props.nameChanged;\n        updateName(event.target.value);\n    }\n    if (props.user !== null) {\n        return (\n            <div className=\"name-input\">\n                <input \n                    id=\"input\"\n                    type=\"name\"\n                    placeholder=\"name / username\"\n                    // value=\"\"\n                    defaultValue={props.user}\n                    onChange={(event) => nameChangeHandler(event)}\n                    required={true}\n                />&nbsp;\n                <Message\n                    status={props.nameStatus}\n                />\n            </div>\n        );\n    } else {\n    \n        return (\n            <div className=\"name-input\">\n                <input \n                    type=\"name\"\n                    placeholder=\"name / username\"\n                    value=\"\"\n                    onChange={(event) => nameChangeHandler(event)}\n                />&nbsp;\n                {/* <Message\n                    status={props.nameStatus}\n                /> */}\n            </div>\n        );\n    }\n}\n\nexport function Footer(props) {\n    return (\n        <div className=\"footer\" />\n    )\n\n}\n","import React, { Component } from 'react';\nimport './Matchups.css';\n\n\nexport default class Matchups extends Component {\n\n    render() {\n        var teamSelectHandler = this.props.teamSelectHandler;\n\n        return this.props.teamData.teams.map((team, index) => {\n            // if (this.props.round <= team.round)\n            return (\n                <li \n                    key={index} \n                    className={`matchup-${team.matchup} ${team.selected} ${team.conference} round-${team.round}`}\n                    onClick={() => teamSelectHandler(team.short, team.matchup, this.props.round)}\n                >\n                    <div className=\"logo-wrapper\">\n                        <div className=\"seed\">\n                            {team.seed}\n                        </div>\n                        <img className=\"team-logo\" \n                            draggable=\"false\"\n                            src={`/teamLogos/${team.short}.png`}\n                            alt={team.short} \n                            title={team.name}\n                        />\n                    </div>\n                    <div className=\"team-info\">\n                        <span className=\"team-short\">{team.short}</span>\n                    </div>\n                </li>\n              );\n        });\n    }\n}\n","import React, { Component } from 'react';\nimport './Matchups.css';\nimport Matchups from './Matchups';\nimport { isThisTypeNode } from 'typescript';\n\nexport default class MatchupWrapper extends Component {\n    constructor() {\n\t\tsuper();\n        this.teamSelectHandler = this.teamSelectHandler.bind(this);\n    }\n\n    componentDidMount() {\n      console.log(\"MOUNTING! \");\n      this.setState({ \n        teams: this.props.teamData\n      })\n    }\n\n    teamSelectHandler(teamShort, matchup, round) {\n\n      let teamNextRound;\n  \n      let teams = this.state.teams.teams.filter((team) => {\n  \n          if (team.short === teamShort) {\n              teamNextRound = team;\n              if (team.selected !== true) {\n                team.round = round + 1;\n              }\n                team.selected = true;\n          }\n          if (team.matchup === matchup && team.short !== teamShort) {\n            if (team.selected === true) {\n              team.round = round - 1;\n            }\n            team.selected = false;\n          }\n  \n          return team;\n      });\n  \n      this.setState({\n        teams: {\n          teams: teams\n        }\n      })      \n  \n      let saveTeams = this.props.saveTeams;\n      saveTeams(this.state.teams);\n    }\n\n    // teamSelectHandler(teamShort, matchup) {\n\n    //   let teams = this.state.teams.teams.filter((team) => {\n\n    //       if (team.short === teamShort) {\n    //           team.selected = true;\n    //       }\n    //       if (team.matchup === matchup && team.short !== teamShort) {\n    //           team.selected = false;\n    //       }\n\n    //       return team;\n    //   });\n\n    //   this.setState({\n    //     teams: {\n    //       teams: teams\n    //     }\n    //   })\n\n    //   let saveTeams = this.props.saveTeams;\n    //   saveTeams(this.state.teams);\n    // }\n\n    render() {\n\n      if (this.props.teamData) {\n\n        return (\n            <React.Fragment>\n                <section className=\"matchup-wrapper\">\n                    <div>\n                      { () => \n                        {\n                          if (this.props.round === 1) {\n                            return(\n                              <React.Fragment>\n                                <h3 className=\"header align-left\" id=\"west-matchups\">west matchups</h3>\n                                <h3 className=\"header align-left\" id=\"east-matchups\">east matchups</h3>\n                              </React.Fragment>\n                            );\n                          }\n                        }\n                      }\n                      <ul className=\"matchups\">\n                        <Matchups\n                            teamData={this.props.teamData}\n                            teamSelectHandler={this.teamSelectHandler}\n                            round={this.props.round}\n                        ></Matchups>\n                      </ul>\n                    </div>\n\n                </section>\n\n            </React.Fragment>\n        );\n      } else {\n        return (<div />)\n      }\n    }\n\n}\n","import React, { Component } from 'react';\nimport '../Matchups.css';\n\nexport default function MatchupInstructions(props) {\n\n  return (\n    <div className=\"instructions\">\n      <ul>\n          <li>For each matchup, click on the team you think will win.</li>\n          <li>\n              <span className=\"scoring\">Scoring: </span> \n              <span className=\"num\">1 point</span> for each correct pick. &nbsp;\n              {/* <span className=\"num\">1 bonus point</span> for picking a&nbsp; */}\n              {/* <div className=\"seed inline-seed\">7</div> or lower seed upset. */}\n          </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { Component} from 'react';\nimport hockeyIcon from './assets/hockey_icon_large.png';\nimport ByeTeams from './components/ByeTeams/ByeTeams';\nimport QualifyingRound from './components/QualifyingRound/QualifyingRound';\nimport Results from './components/Results/Results';\nimport Leaderboard from './components/Leaderboard/Leaderboard';\nimport SemiFinals from './components/SemiFinals/SemiFinals';\nimport { Sidebar, Button, Input, Footer } from './components/HelperComponents/HelperComponents';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './App.css';\nimport 'react-tabs/style/react-tabs.css';\nimport MatchupWrapper from './components/MatchupWrapper/MatchupWrapper';\nimport MatchupInstructions from './components/MatchupWrapper/MatchupInstructions/MatchupInstructions';\nimport conferenceSemiFinals from './assets/semiFinalRoundData.json';\nimport qualifyingTeams from './assets/qualifyingRoundData.json';\n\n\nclass App extends Component {\n\n  state = {\n    byeTeamsStatus: \"ready\",\n    byeTeams: null,\n    qualifyingTeamsStatus: \"not_ready\",\n    qualifyingTeams: null,\n    teams: null,\n    name: null,\n    nameStatus: null,\n    saveStatus: null,\n    saveMessage: null,\n    club: null,\n    leaders: null,\n    user: null,\n    userPicks: null,\n    quarterfinalPicks: null,\n    semifinalPicks: null\n  }\n\n  componentDidMount() {\n    let user = this.getCookie(\"user\");\n    if (this.state.user === null) {\n      this.setState({user: user})\n    }\n    this.getLeaders();\n    this.getUserPicks();\n    this.getQuarterfinalPicks();\n    this.getSemifinalPicks();\n    // console.log(\"state: \" + JSON.stringify(this.state, null, 4))\n  }\n\n  // function to test the api quickly\n  getTime = () => {\n    fetch('/api/time', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ currentTime: data.time }));\n  }\n\n  getLeaders = () => {\n    fetch('/api/leaderboard', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ leaders: data.leaders }));\n  }\n\n  getUserPicks = () => {\n    fetch('/api/user_picks', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ userPicks: data.picks }));\n  }\n\n  getQuarterfinalPicks = () => {\n    fetch('/api/quarterfinal_picks', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ quarterfinalPicks: data.picks }));\n  }\n  \n  getSemifinalPicks = () => {\n    fetch('/api/semifinal_picks', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ semifinalPicks: data.picks }));\n  }\n\n  checkIfNameIsTaken = (name) => {\n    fetch('/names/' + name, {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ nameStatus: data.status }));\n  }\n\n  checkIfReady = (check) => {\n    let user = this.getCookie(\"user\");\n    this.setState({user: user});\n\n    let count = 0;\n\n    if (check === \"qualifyingTeams\") {\n      for (let i=0; i < 16; i++) {\n        if (this.state.qualifyingTeams.teams[i].selected === true) {\n          count += 1\n        }\n      }\n      if (count >= 8) {\n        this.setState({qualifyingTeamsStatus: \"ready\"});\n      }\n    } else if (check === \"byeTeams\") {\n      for (let i=1; i < 8; i++) {\n        if ((this.state.byeTeams[i].type === \"east\") || (this.state.byeTeams[i].type === \"west\")) {\n          this.setState({byeTeamsStatus: \"not_ready\"});\n          return\n        }\n      }\n      if (count === 0) {\n        this.setState({byeTeamsStatus: \"ready\"});\n      }\n    } else {\n        // conferenceSemiFinals\n        for (let i=0; i < 8; i++) {\n          if (this.state.teams[i].selected === true) {\n            count += 1\n          }\n        }\n        if (count >= 4) {\n          this.setState({qualifyingTeamsStatus: \"ready\"});\n        }\n    }\n  }\n\n  saveByesToState = (teams) => {\n    this.setState({\n      byeTeams: teams\n    }, () => {\n      this.checkIfReady(\"byeTeams\");\n    });\n  }\n\n  saveQualifyingTeamsToState = (teams) => {\n    this.setState({\n      qualifyingTeams: teams\n    }, () => {\n      this.checkIfReady(\"qualifyingTeams\");\n    });    \n  }\n\n  saveConferenceSemiFinalsToState = (teams) => {\n    this.setState({\n      teams: teams.teams\n    }, () => {\n      console.log(\"App.js state: \" + JSON.stringify(this.state, null, 4))\n      this.checkIfReady(\"conferenceSemiFinals\")\n    });\n  }\n\n  getRequests = () => {\n    let s1 = window.location.search.substring(1, window.location.search.length).split('&'),\n        r = {}, s2, i;\n    for (i = 0; i < s1.length; i += 1) {\n        s2 = s1[i].split('=');\n        r[decodeURIComponent(s2[0]).toLowerCase()] = decodeURIComponent(s2[1]);\n    }\n    return r;\n  }\n\n  nameChangeHandler = (name) => {\n    if (name.length === 0) {\n      this.setState( {\n        nameStatus: null\n      })\n    }\n\n    this.setState( {\n      user: name\n    }, () => {\n      if (name !== null) {\n        this.setState({nameStatus: \"available\"});\n      }\n    });\n  }\n\n  saveRound = () => {\n    fetch('/api/save_round', {\n      method: 'POST',\n      body: JSON.stringify(\n        { \n          name: this.state.user,\n          picks: this.state.teams\n        }\n      )\n    })\n    .then(results => results.json())\n    .then(data => this.setState({saveStatus: data.status, saveMessage: data.message}))\n  }\n\n  saveToDB = () => {\n    let club = this.getRequests().club;\n    this.setCookie(\"club\", club);\n    this.setCookie(\"user\", this.state.name);\n\n    fetch('/api/save', {\n      method: 'POST',\n      body: JSON.stringify(\n        { \n          name: this.state.name,\n          byeTeams: this.state.byeTeams,\n          qualifyingTeams: this.state.qualifyingTeams,\n          club: club\n        }\n      )\n    })\n    .then(results => results.json())\n    .then(data => this.setState({saveStatus: data.status, saveMessage: data.message}))\n  }\n\n  getCookie = (cookieName) => {\n    let name = cookieName + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  setCookie = (string, value) => {\n    const expiry = new Date(); \n    expiry.setDate(expiry.getDate() + 90)\n    document.cookie = string + \"=\" + value + \"; expires=\" + expiry\n  }\n\n  render() {\n    // console.log(\"state: \" + JSON.stringify(this.state, null, 4))\n    return (\n      <main>\n        <section>\n          <h1>2020 NHL Playoff Pool</h1>\n        </section>\n        <Sidebar \n          className=\"left-aside\"\n          image={hockeyIcon}\n        />\n        <div className = \"greeting\">\n          {/* { this.state.user === null ? \"\" : \"Hey \" + this.state.user +  \n            \", it's time to enter your picks for round 2!\"\n          } */}\n        </div>\n\n        <Tabs defaultIndex={1}>\n          <TabList>\n            <div>\n              {/* <Tab><div className=\"tab\">Matchup wrapper</div></Tab>\n              <Tab><div className=\"tab\">Matchup test</div></Tab> */}\n              <Tab><div className=\"tab\">Round 3</div></Tab>\n              <Tab><div className=\"tab\">Leaderboard</div></Tab>\n              <Tab><div className=\"tab\">Full Results</div></Tab>\n            </div>\n          </TabList>\n\n          {/* <TabPanel>\n            <h2>Conference Quarterfinals</h2>\n\n            <QualifyingRound \n              saveQualifiers={this.saveQualifyingTeamsToState}\n              qualifyingTeamsStatus={this.state.qualifyingTeamsStatus}\n            />\n            <Input \n              type=\"text\"\n              nameChanged={this.nameChangeHandler}\n              nameStatus={this.state.nameStatus}\n              user={this.state.user}\n            />\n            <Button \n              name = {this.state.user}\n              save = {this.saveRound2}\n              nameStatus = {this.state.nameStatus}\n              qualifyingTeamsStatus = {this.state.qualifyingTeamsStatus}\n              label=\"Submit picks\"\n              saveStatus = {this.state.saveStatus}\n              saveMessage = {this.state.saveMessage}\n            /> \n          </TabPanel>    */}\n          {/* <TabPanel>\n            <h2>Matchup</h2>\n            <MatchupInstructions \n            />\n            <MatchupWrapper\n              saveTeams={this.saveConferenceSemiFinalsToState}\n              teamData = {conferenceSemiFinals}\n              round = {1}\n            >\n            </MatchupWrapper>\n            <MatchupWrapper\n              saveTeams={this.saveConferenceSemiFinalsToState}\n              teamData = {conferenceSemiFinals}\n              round = {2}\n            >\n            </MatchupWrapper>\n            <Input \n              type=\"text\"\n              nameChanged={this.nameChangeHandler}\n              nameStatus={this.state.nameStatus}\n              user={this.state.user}\n            />\n            <Button \n              name = {this.state.user}\n              save = {this.saveRound}\n              nameStatus = {this.state.nameStatus}\n              qualifyingTeamsStatus = {this.state.qualifyingTeamsStatus}\n              label=\"Submit picks\"\n              saveStatus = {this.state.saveStatus}\n              saveMessage = {this.state.saveMessage}\n            /> \n          </TabPanel>\n          <TabPanel>\n            <h2>Matchup test</h2>\n            <MatchupWrapper\n              saveTeams={this.saveConferenceSemiFinalsToState}\n              teamData = {qualifyingTeams}\n              columns = {3}\n            >\n            </MatchupWrapper>\n          </TabPanel> */}\n          <TabPanel>\n            <h2>Conference Semifinals</h2>\n            <MatchupInstructions \n            />\n            <MatchupWrapper\n              saveTeams={this.saveConferenceSemiFinalsToState}\n              teamData = {conferenceSemiFinals}\n              round = {1}\n            />\n            <Input \n              type=\"text\"\n              nameChanged={this.nameChangeHandler}\n              nameStatus={this.state.nameStatus}\n              user={this.state.user}\n            />\n            <Button \n              name = {this.state.user}\n              save = {this.saveRound}\n              nameStatus = {this.state.nameStatus}\n              qualifyingTeamsStatus = {this.state.qualifyingTeamsStatus}\n              label=\"Submit picks\"\n              saveStatus = {this.state.saveStatus}\n              saveMessage = {this.state.saveMessage}\n            /> \n          </TabPanel>\n          <TabPanel>\n            <ul className=\"leaders\">\n              <Leaderboard \n                leaders={this.state.leaders}\n                user={this.state.user}\n              />\n            </ul>\n          </TabPanel>\n          <TabPanel>\n            <ul className=\"results\">\n              <Results\n                // byeTeams={this.state.byeTeams}\n                // qualifyingTeams={this.state.qualifyingTeams}\n                user={this.state.user}\n                userPicks={this.state.userPicks}\n                quarterfinalPicks={this.state.quarterfinalPicks}\n                semifinalPicks={this.state.semifinalPicks}\n              />\n            </ul>\n          </TabPanel>       \n        </Tabs>\n\n        {/* \n        <ByeTeams \n          saveByes= {this.saveByesToState}\n          byeStatus={this.state.byeStatus}\n        />    \n        <Input \n          type=\"text\"\n          nameChanged={this.nameChangeHandler}\n          nameStatus={this.state.nameStatus}\n          value={this.state.name}\n        />\n        <Button \n          name = {this.state.name}\n          save = {this.saveToDB}\n          nameStatus = {this.state.nameStatus}\n          byeTeamsStatus ={this.state.byeTeamsStatus}\n          qualifyingTeamsStatus = {this.state.qualifyingTeamsStatus}\n          label=\"Submit picks\"\n          saveStatus = {this.state.saveStatus}\n          saveMessage = {this.state.saveMessage}\n        /> */}\n        <Sidebar \n          className=\"right-aside\"\n        />\n        <Footer />\n      </main>\n    );\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}