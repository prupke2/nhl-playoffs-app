{"version":3,"sources":["assets/hockey_icon_large.png","components/ByeTeams/ByeTeams.jsx","components/QualifyingRound/Matchups/Matchups.jsx","components/QualifyingRound/QualifyingRound.jsx","components/HelperComponents/HelperComponents.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ByeTeams","onDragStart","event","team","dataTransfer","setData","short","type","conference","eligibleBox","eligibleSpots","document","getElementById","style","border","id","cursor","onDragOver","preventDefault","onDragEnd","eastBoxes","westBoxes","onDrop","droppedTeamType","teams","droppedTeamConference","slice","draggedTeamShort","getData","draggedTeamType","draggedTeamConference","state","byeSpots","filter","setState","saveByes","props","byeTeamData","columns","west","west1","west2","west3","west4","east1","east2","east3","east4","east","this","forEach","push","key","draggable","className","seed","src","alt","title","name","Fragment","Component","Matchups","teamSelectHandler","map","index","matchup","selected","onClick","QualifyingRound","QualifyingRoundData","bind","teamShort","saveQualifiers","React","Children","toArray","Sidebar","image","content","DisabledButton","disabled","label","Button","byeTeamsStatus","qualifyingTeamsStatus","nameStatus","saveStatus","save","Message","saveMessage","status","message","console","log","Input","placeholder","value","onChange","updateName","nameChanged","target","nameChangeHandler","Footer","App","byeTeams","qualifyingTeams","getTime","fetch","method","then","results","json","data","currentTime","time","checkIfNameIsTaken","checkIfReady","check","count","i","JSON","stringify","saveByesToState","saveQualifyingTeamsToState","length","saveToDB","body","hockeyIcon","byeStatus","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.300d1f38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hockey_icon_large.cc443e14.png\";","import React, { Component } from 'react';\nimport './ByeTeams.css';\nimport byeTeamData from './byeTeamData.json';\n\nexport default class ByeTeams extends Component {\n\n    constructor() {\n\t\tsuper();\n        this.state = byeTeamData;\n    }\n \n\tonDragStart = (event, team) => {\n        event.dataTransfer.setData(\"draggedTeamShort\", team.short);\n        event.dataTransfer.setData(\"draggedTeamType\", team.type);\n        event.dataTransfer.setData(\"draggedTeamConference\", team.conference);\n        const eligibleBox = team.type + \"-droppable-box\";\n        const eligibleSpots = document.getElementById(eligibleBox);\n        if (eligibleSpots !== null) {\n            // put a green box around the spots you can drag it to\n            eligibleSpots.style.border = \"2px solid var(--eligible)\";\n        }\n\n        // sets the cursor to a closed hand while they are grabbing a box\n        const box = document.getElementById(team.id);\n        box.style.cursor = \"grabbing\";\n    }\n    \n\tonDragOver = (event) => {\n        event.preventDefault();\n    }\n    \n    onDragEnd = (event, id) => {\n\n        const eastBoxes = document.getElementById(\"east-droppable-box\");\n        const westBoxes = document.getElementById(\"west-droppable-box\");\n        eastBoxes.style.border = \"2px solid black\";\n        westBoxes.style.border = \"2px solid black\";\n\n        // in case the user drops a box in the wrong spot, this sets the cursor back to an open hand instead of closed\n        const box = document.getElementById(id);\n        box.style.cursor = \"grab\";\n    }\n\n\tonDrop = (event, droppedTeamType) => {\n\n        event.preventDefault();\n        const droppedTeamConference = droppedTeamType.slice(0,4);\n\n        let draggedTeamShort = event.dataTransfer.getData(\"draggedTeamShort\");\n        let draggedTeamType = event.dataTransfer.getData(\"draggedTeamType\");\n        let draggedTeamConference = event.dataTransfer.getData(\"draggedTeamConference\");\n\n        // when dropping anywhere, put all borders back to normal\n        const eastBoxes = document.getElementById(\"east-droppable-box\");\n        const westBoxes = document.getElementById(\"west-droppable-box\");\n        eastBoxes.style.border = \"2px solid black\";\n        westBoxes.style.border = \"2px solid black\";\n\n        // if east is dragged into west (or vice versa), don't allow it to stay.\n        if (draggedTeamConference !== droppedTeamConference) {\n            // console.log(draggedTeamConference + \" does not match: \" + droppedTeamConference);\n            return;\n        } else {\n            // console.log(\"type \" + draggedTeamConference + \" matches conference: \" + droppedTeamConference);\n            let teams;\n\n            // if team was dropped from the byes area\n            if (draggedTeamType === droppedTeamConference) {\n\n                // cycle through the teams and update their types\n                teams = this.state.byeSpots.teams.filter((team) => {\n                    if (team.type === droppedTeamType) {\n                        // if there is a team in this slot already, move it back to the byes area\n                        team.type = draggedTeamType;\n                    }\n                    if (team.short === draggedTeamShort) {\n                        // update the dragged team's type so it stays in the dropped slot\n                        team.type = droppedTeamType;\n                    }\n                    return team;\n                });\n            } else {\n                // team was dragged from one slot to another\n\n                // cycle through the teams to update the dragged and dropped slot types\n                teams = this.state.byeSpots.teams.filter((team) => {\n                    if (team.type === droppedTeamType && droppedTeamType !== \"east\" && droppedTeamType !== \"west\") {\n                        // console.log(team.short + \" moving to slot: \" + draggedTeamType);\n                        // update team in target spot to the dragged team's old spot\n                        team.type = draggedTeamType;\n                    }\n                    if (team.short === draggedTeamShort) {\n                        // console.log(team.short + \" moving to slot: \" + droppedTeamType);\n\n                        // update the dragged team's type so it stays in the dropped slot\n                        team.type = droppedTeamType;\n                    }\n                    return team;\n                });\n            };\n\n            this.setState({\n                ...this.state,\n                teams\n            });\n\n            let saveByes = this.props.saveByes;\n            saveByes(teams);\n        };\n    }\n\n\trender() {\n\t\tvar columns = {\n          west: [],\n          west1: [],\n          west2: [],\n          west3: [],\n          west4: [],\n          east1: [],\n          east2: [],\n          east3: [],\n          east4: [],\n          east: []\n        }\n\n\t\tthis.state.byeSpots.teams.forEach ((team) => {\n        columns[team.type].push(\n            <div key={team.id} \n                id={team.id}\n                onDragStart = {(event) => this.onDragStart(event, team)}\n                onDragOver = {(event) => this.onDragOver(event)}\n                onDragEnd = {(event) => this.onDragEnd(event, team.id)}\n                draggable\n                className=\"team-wrapper\"\n\t\t    >\n                <div className=\"logo-wrapper\">\n                    <div className=\"seed\">\n                        {team.seed}   \n                    </div>\n                    <img className=\"team-logo\" \n                        draggable=\"false\"\n                        src={`/teamLogos/${team.short}.png`}\n                        alt={team.short} \n                        title={team.name}\n                    />\n                </div>\n                <div className=\"team-info\">\n                    <span className=\"team-short\">{team.short}</span>\n                </div>\n\t\t      \n\t\t    </div>\n\t\t  );\n        });\n\n\t    return (\n            <React.Fragment>\n                <h2 className=\"round-robin\">Bye Team Round Robin</h2>\n                <div className=\"instructions\">\n                    <ul>\n                        <li><span className=\"scoring\">Bonus round -</span>  Drag and drop the teams in the order you think they will finish</li>\n                        <li>\n                            <span className=\"scoring\">Scoring: </span> \n                            <span className=\"num\">3 points</span> if the order is correct, <span className=\"num\">0 points</span> otherwise\n                        </li>   \n                    </ul>\n\n                </div>\n                <section className=\"bye-team-round\">\n\n                    <div className=\"drag-container drag-container-west\">\n                        <div className=\"drag-west\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>{this.onDrop(event, \"west\")}}>\n                            <h3 className=\"header align-right\">west byes</h3>\n                        {columns.west}\n                        </div>\n                    </div>\n\n                    <div className=\"drop-container\" id=\"west-droppable-box\">\n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west1\")}>\n                            <span className=\"header small-header\">west 1</span>\n                            {columns.west1}\n                        </div>\t       \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west2\")}>\n                            <span className=\"header small-header\">west 2</span>\n                            {columns.west2}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west3\")}>\n                            <span className=\"header small-header\">west 3</span>\n                            {columns.west3}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west4\")}>\n                            <span className=\"header small-header\">west 4</span>\n                            {columns.west4}\n                        </div>\t\n                    </div>  \n\n                    <div className=\"drop-container\" id=\"east-droppable-box\">\n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east1\")}>\n                            <span className=\"header small-header\">east 1</span>\n                            {columns.east1}\n                        </div>\t       \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east2\")}>\n                            <span className=\"header small-header\">east 2</span>\n                            {columns.east2}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east3\")}>\n                            <span className=\"header small-header\">east 3</span>\n                            {columns.east3}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east4\")}>\n                            <span className=\"header small-header\">east 4</span>\n                            {columns.east4}\n                        </div>\t\n                    </div>  \n\n                    <div className=\"drag-container drag-container-east\">\n                        <div className=\"drag-east\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>{this.onDrop(event, \"east\")}}>\n                            <h3 className=\"header align-left\">east byes</h3>\n                            {columns.east}\n                        </div>\n                    </div>\n\n                </section>\n\n            </React.Fragment>\n\n\t    );\n  \t}\n}\n","import React, { Component } from 'react';\nimport './Matchups.css';\n\n\nexport default class Matchups extends Component {\n\n    render() {\n        var teamSelectHandler = this.props.teamSelectHandler;\n\n        return this.props.teams.teams.map((team, index) => {\n            return (\n                <li \n                    key={team.id} \n                    className={`matchup-${team.matchup} ${team.selected} ${team.conference}`}\n                    onClick={() => teamSelectHandler(team.short, team.matchup)}\n                >\n                    <div className=\"logo-wrapper\">\n                        <div className=\"seed\">\n                            {team.seed}\n                        </div>\n                        <img className=\"team-logo\" \n                            draggable=\"false\"\n                            src={`/teamLogos/${team.short}.png`}\n                            alt={team.short} \n                            title={team.name}\n                        />\n                    </div>\n                    <div className=\"team-info\">\n                        <span className=\"team-short\">{team.short}</span>\n                    </div>\n                </li>\n              );\n        });\n    }\n}\n","import React, { Component } from 'react';\nimport './QualifyingRound.css';\nimport QualifyingRoundData from './qualifyingRoundData.json';\nimport Matchups from './Matchups/Matchups';\n\nexport default class QualifyingRound extends Component {\n    constructor() {\n\t\tsuper();\n        this.state = QualifyingRoundData;\n        this.teamSelectHandler = this.teamSelectHandler.bind(this);\n        // this.saveTeamsHandler = this.saveTeamsHandler.bind(this);\n    }\n\n    teamSelectHandler(teamShort, matchup) {\n        // let search = this.state.eastTeams;\n        // const conferenceLetter = matchup.slice(0,1);\n        // if (conferenceLetter === \"w\") {\n        //     search = this.state.westTeams;\n        // }\n\n        let teams = this.state.teams.filter((team) => {\n\n            if (team.short === teamShort) {\n                team.selected = true;\n            }\n            if (team.matchup === matchup && team.short !== teamShort) {\n                team.selected = false;\n            }\n\n            return team;\n        });\n\n        this.setState({\n            ...this.state,\n            teams\n        })\n\n        let saveQualifiers = this.props.saveQualifiers;\n        saveQualifiers(this.state);\n\n    }\n\n    // saveTeamsHandler = (event) => {\n    //     let saveQualifiers = this.props.saveQualifiers;\n    //     console.log(\"STATE: \" + JSON.stringify(this.state, null, 4))\n    //     saveQualifiers(this.state);\n    // }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <h2>Qualifying Round</h2>\n                <div className=\"instructions\">\n                    <ul>\n                        <li>Click on one team in each matchup to select who you believe will win.</li>\n                        <li>\n                            <span className=\"scoring\">Scoring: </span> \n                            <span className=\"num\">1 point</span> for each correct pick, and &nbsp;\n                            <span className=\"num\">1 bonus point</span> for picking an&nbsp;\n                            <div className=\"seed inline-seed\">11</div> or&nbsp;\n                            <div className=\"seed inline-seed\">12</div> seed upset\n                        </li>\n                    </ul>\n                </div>\n                <section className=\"qualifying-round\">\n                    <div>\n                        <h3 className=\"header align-left\">west matchups</h3>\n                        <h3 className=\"header align-left\" id=\"east-matchups\">east matchups</h3>\n\n                        <ul className=\"matchups\">\n                            { React.Children.toArray(\n                                <Matchups\n                                    teams={this.state}\n                                    teamSelectHandler={this.teamSelectHandler}\n                                ></Matchups>\n                            )}\n                        </ul>\n                    </div>\n                    {/* <div>\n                        <h3 className=\"header align-right\">east matchups</h3>\n                        <ul className=\"matchups east-matchups\">\n                            { React.Children.toArray(\n                                <Matchups\n                                    teams={this.state.eastTeams}\n                                    teamSelectHandler={this.teamSelectHandler}\n                                ></Matchups>\n                            )}\n                        </ul>\n                    </div> */}\n\n                </section>\n\n            </React.Fragment>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport function Sidebar(props) {\n    if (props.image) {\n        return (\n            <aside className={props.className}>\n                <img src={props.image} className=\"logo\" alt=\"Hockey logo\" />\n            </aside>\n        );\n    }\n    return (\n        <aside className={props.className}>\n            {props.content}\n        </aside>\n    )\n}\n\nexport function DisabledButton(props) {\n    return (\n        <button disabled={true} className={props.className}>\n            {props.label}\n        </button>)\n    ;    \n}\n\nexport function Button(props) {\n\n    const saveHandler = (event) => {\n        let save = props.save;\n        save();\n    }\n\n    if (\n        props.byeTeamsStatus === \"ready\" \n        && props.qualifyingTeamsStatus === \"ready\" \n        && props.nameStatus === \"available\"\n        && props.saveStatus !== \"saved\"\n        ) {\n        return (\n            <React.Fragment>\n\n                <button \n                    className={props.byeTeamsStatus}\n                    onClick={saveHandler}\n                >\n                    {props.label}\n                </button>\n                <Message\n                    saveStatus={props.saveStatus}\n                    saveMessage={props.saveMessage}\n\n                />\n            </React.Fragment>\n\n        );\n    }\n    \n    return (\n        <React.Fragment>\n            <DisabledButton \n                className=\"disabled-button\"\n                label={props.label}\n            />\n            <Message\n                saveStatus={props.saveStatus}\n                saveMessage={props.saveMessage}\n            />\n        </React.Fragment>\n    );\n}\n\nexport function Message(props) {\n    if (props.status === null || props.saveStatus === null) {\n        return \" \"\n    }\n\n    let message = \"🚫\"\n    if (props.status === \"available\" || props.saveStatus === \"saved\") {\n        message = \"✅\"\n        console.log(\"props.saveStatus: \" + props.saveStatus + \", props.saveMessage: \" + props.saveMessage);\n    }\n    return (\n        <span className={`status ${props.status} ${props.saveStatus}`}>\n            {message} {props.saveMessage}\n        </span>\n    );\n}\n\nexport function Input(props) {\n    const nameChangeHandler = (event) => {\n        let updateName = props.nameChanged;\n        updateName(event.target.value);\n    }\n    \n    return (\n        <div className=\"name-input\">\n            <input \n                type=\"name\"\n                placeholder=\"name / username\"\n                value={props.name}\n                onChange={(event) => nameChangeHandler(event)}\n            />&nbsp;\n            <Message\n                status={props.nameStatus}\n            />\n        </div>\n    );\n}\n\nexport function Footer(props) {\n    return (\n        <div className=\"footer\" />\n    )\n\n}\n","import React, { Component} from 'react';\nimport hockeyIcon from './assets/hockey_icon_large.png';\nimport ByeTeams from './components/ByeTeams/ByeTeams';\nimport QualifyingRound from './components/QualifyingRound/QualifyingRound';\nimport { Sidebar, Button, Input, Footer } from './components/HelperComponents/HelperComponents';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    byeTeamsStatus: \"not_ready\",\n    byeTeams: null,\n    qualifyingTeamsStatus: \"not_ready\",\n    qualifyingTeams: null,\n    name: null,\n    nameStatus: null,\n    saveStatus: null,\n    saveMessage: null\n  }\n\n  // function to test the api quickly\n  getTime = () => {\n    fetch('/api/time', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({currentTime: data.time}));\n  }\n\n  checkIfNameIsTaken = (name) => {\n    console.log(\"name: \" + name);\n    fetch('/names/' + name, {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({nameStatus: data.status}))\n    .then(console.log(\"Status: \" + this.state.nameStatus));\n  }\n\n  checkIfReady = (check) => {\n    let count = 0;\n\n    if (check === \"qualifyingTeams\") {\n      for (let i=0; i < 16; i++) {\n        if (this.state.qualifyingTeams.teams[i].selected === true) {\n          count += 1\n        }\n      }\n      if (count >= 8) {\n        this.setState({qualifyingTeamsStatus: \"ready\"});\n      }\n    } else {\n      for (let i=1; i < 8; i++) {\n        console.log(\"team: \" + JSON.stringify(this.state.byeTeams[i], null, 4))\n        if ((this.state.byeTeams[i].type === \"east\") || (this.state.byeTeams[i].type === \"west\")) {\n          console.log(\"Not ready\");\n          this.setState({byeTeamsStatus: \"not_ready\"});\n          return\n        }\n      }\n      if (count === 0) {\n        console.log(\"Ready.\");\n        this.setState({byeTeamsStatus: \"ready\"});\n      }\n    }\n  }\n\n  saveByesToState = (teams) => {\n    this.setState({\n      byeTeams: teams\n    }, () => {\n      this.checkIfReady(\"byeTeams\");\n    });\n  }\n\n  saveQualifyingTeamsToState = (teams) => {\n    this.setState({\n      qualifyingTeams: teams\n    }, () => {\n      this.checkIfReady(\"qualifyingTeams\");\n    });    \n  }\n\n  nameChangeHandler = (name) => {\n    if (name.length === 0) {\n      this.setState( {\n        nameStatus: null\n      })\n      return\n    }\n\n    this.setState( {\n      name: name\n    }, () => {\n      if (name !== null) {\n        this.checkIfNameIsTaken(name);\n      }\n    });\n  }\n\n  saveToDB = () => {\n    console.log(this.state.byeTeams, this.state.qualifyingTeamsStatus);\n    fetch('/api/save', {\n      method: 'POST',\n      body: JSON.stringify(\n        { \n          name: this.state.name,\n          byeTeams: this.state.byeTeams,\n          qualifyingTeams: this.state.qualifyingTeams\n        }\n      )\n    })\n    .then(results => results.json())\n    .then(data => this.setState({saveStatus: data.status, saveMessage: data.message}));\n  }\n\n  render() {\n\n    console.log(\"status: \" + this.state.saveStatus);\n    console.log(\"message: \" + this.state.saveMessage);\n\n    return (\n      <main>\n        <section>\n          <h1>2020 NHL Playoff Pool</h1>\n        </section>\n        <ul>\n          <li>Select your picks in two minutes.</li>\n          <li>No signup required.</li>\n        </ul>\n        <Sidebar \n          className=\"left-aside\"\n          image={hockeyIcon}\n        />\n        <QualifyingRound \n          saveQualifiers={this.saveQualifyingTeamsToState}\n          qualifyingTeamsStatus={this.state.qualifyingTeamsStatus}\n        />\n        <ByeTeams \n          saveByes= {this.saveByesToState}\n          byeStatus={this.state.byeStatus}\n        />    \n        <Input \n          type=\"text\"\n          nameChanged={this.nameChangeHandler}\n          nameStatus={this.state.nameStatus}\n          value={this.state.name}\n        />\n        <Button \n          name = {this.state.name}\n          save = {this.saveToDB}\n          nameStatus = {this.state.nameStatus}\n          byeTeamsStatus ={this.state.byeTeamsStatus}\n          qualifyingTeamsStatus = {this.state.qualifyingTeamsStatus}\n          label=\"Submit picks\"\n          saveStatus = {this.state.saveStatus}\n          saveMessage = {this.state.saveMessage}\n        />\n        <Sidebar \n          className=\"right-aside\"\n        />\n        <Footer />\n      </main>\n    );\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}