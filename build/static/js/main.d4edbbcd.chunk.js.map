{"version":3,"sources":["assets/hockey_icon_large.png","components/ByeTeams/ByeTeams.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ByeTeams","onDragStart","event","team","dataTransfer","setData","short","type","conference","eligibleBox","eligibleSpots","document","getElementById","style","border","onDragOver","preventDefault","onDragEnd","eastBoxes","westBoxes","onDrop","droppedTeamType","console","log","JSON","stringify","state","byeSpots","teams","droppedTeamConference","slice","draggedTeamShort","getData","draggedTeamType","draggedTeamConference","filter","setState","teamData","columns","east","east1","east2","east3","east4","west1","west2","west3","west4","west","this","forEach","push","key","id","draggable","className","seed","src","logo","alt","title","name","Component","App","matchups","eastTeamByeChoices","Array","fill","westTeamByeChoices","hockeyIcon","props","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d4edbbcd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hockey_icon_large.cc443e14.png\";","import React, { Component } from 'react';\nimport './ByeTeams.css';\nimport teamData from './teamData.json';\n\nexport default class ByeTeams extends Component {\n\n    constructor() {\n\t\tsuper();\n        this.state = teamData;\n    }\n \n\tonDragStart = (event, team) => {\n        event.dataTransfer.setData(\"draggedTeamShort\", team.short);\n        event.dataTransfer.setData(\"draggedTeamType\", team.type);\n        event.dataTransfer.setData(\"draggedTeamConference\", team.conference);\n        const eligibleBox = team.type + \"-droppable-box\";\n        const eligibleSpots = document.getElementById(eligibleBox);\n        if (eligibleSpots !== null) {\n            // put a green box around the spots you can drag it to\n            eligibleSpots.style.border = \"2px solid lightgreen\";\n        }\n    }\n    \n\tonDragOver = (event, type) => {\n        event.preventDefault();\n    }\n    \n    onDragEnd = (event) => {\n        const eastBoxes = document.getElementById(\"east-droppable-box\");\n        const westBoxes = document.getElementById(\"west-droppable-box\");\n        eastBoxes.style.border = \"2px solid black\";\n        westBoxes.style.border = \"2px solid black\";\n    }\n\n\tonDrop = (event, droppedTeamType) => {\n        console.log(\"state.byeSpots.teams: \" + JSON.stringify(this.state.byeSpots.teams, null, 4));\n\n        event.preventDefault();\n        const droppedTeamConference = droppedTeamType.slice(0,4);\n\n        let draggedTeamShort = event.dataTransfer.getData(\"draggedTeamShort\");\n        let draggedTeamType = event.dataTransfer.getData(\"draggedTeamType\");\n        let draggedTeamConference = event.dataTransfer.getData(\"draggedTeamConference\");\n\n\n        // when dropping anywhere, put all borders back to normal\n        const eastBoxes = document.getElementById(\"east-droppable-box\");\n        const westBoxes = document.getElementById(\"west-droppable-box\");\n        eastBoxes.style.border = \"2px solid black\";\n        westBoxes.style.border = \"2px solid black\";\n\n        // if east is dragged into west (or vice versa), don't allow it to stay.\n        if (draggedTeamConference !== droppedTeamConference) {\n            // console.log(draggedTeamConference + \" does not match: \" + droppedTeamConference);\n            return;\n        } else {\n            // console.log(\"type \" + draggedTeamConference + \" matches conference: \" + droppedTeamConference);\n            let teams;\n\n            // if team was dropped from the byes area\n            if (draggedTeamType === droppedTeamConference) {\n\n                // cycle through the teams and update their types\n                teams = this.state.byeSpots.teams.filter((team) => {\n\n                    if (team.type === droppedTeamType) {\n                        // if there is a team in this slot already, move it back to the byes area\n                        team.type = draggedTeamType;\n                    }\n\n                    if (team.short === draggedTeamShort) {\n                        // update the dragged team's type so it stays in the dropped slot\n                        team.type = droppedTeamType;\n                    }\n                });\n            } else {\n                // team was dragged from one slot to another\n\n                // cycle through the teams to update the dragged and dropped slot types\n                teams = this.state.byeSpots.teams.filter((team) => {\n                    if (team.type === droppedTeamType) {\n                        // console.log(team.short + \" moving to slot: \" + draggedTeamType);\n                        // update team in target spot to the dragged team's old spot\n                        team.type = draggedTeamType;\n                    }\n\n                    if (team.short === draggedTeamShort) {\n                        // console.log(team.short + \" moving to slot: \" + droppedTeamType);\n\n                        // update the dragged team's type so it stays in the dropped slot\n                        team.type = droppedTeamType;\n                    }\n\n                });\n            };\n\n            this.setState({\n                ...this.state,\n                teams\n            });\n        };\n    }\n\n\trender() {\n\t\tvar columns = {\n          east: [],\n          east1: [],\n          east2: [],\n          east3: [],\n          east4: [],\n          west1: [],\n          west2: [],\n          west3: [],\n          west4: [],\n\t      west: []\n        }\n\n\t\tthis.state.byeSpots.teams.forEach ((team) => {\n        columns[team.type].push(\n\t\t    <div key={team.id} \n              onDragStart = {(event) => this.onDragStart(event, team)}\n              onDragOver = {(event) => this.onDragStart(event, team.type)}\n              onDragEnd = {(event) => this.onDragEnd(event)}\n\t\t      draggable\n\t\t      className=\"team-wrapper\"\n\t\t    >\n                <div className=\"logo-wrapper\">\n                    <div className=\"seed\">\n                        {team.seed}   \n                    </div>\n                    <img className=\"team-logo\" \n                        draggable=\"false\"\n                        src={team.logo} \n                        alt={team.short} \n                        title={team.name}\n                    />\n                </div>\n                <div className=\"team-info\">\n                    <span className=\"team-short\">{team.short}</span>\n                </div>\n\t\t      \n\t\t    </div>\n\t\t  );\n        });\n\n\t    return (\n        <section>\n            <div className=\"drag-container drag-container-east\">\n                <div className=\"drag-east\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>{this.onDrop(event, \"east\")}}>\n                    <span className=\"header align-right\">east byes</span>\n                    {columns.east}\n                </div>\n            </div>\n\n            <div className=\"drop-container\" id=\"east-droppable-box\">\n                <div className=\"droppable\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>this.onDrop(event, \"east1\")}>\n                    <span className=\"header small-header\">east 1</span>\n                    {columns.east1}\n                </div>\t       \n                <div className=\"droppable\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>this.onDrop(event, \"east2\")}>\n                    <span className=\"header small-header\">east 2</span>\n                    {columns.east2}\n                </div>\t \n                <div className=\"droppable\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>this.onDrop(event, \"east3\")}>\n                    <span className=\"header small-header\">east 3</span>\n                    {columns.east3}\n                </div>\t \n                <div className=\"droppable\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>this.onDrop(event, \"east4\")}>\n                    <span className=\"header small-header\">east 4</span>\n                    {columns.east4}\n                </div>\t\n            </div>  \n\n            <div className=\"drop-container\" id=\"west-droppable-box\">\n                <div className=\"droppable\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>this.onDrop(event, \"west1\")}>\n                    <span className=\"header small-header\">west 1</span>\n                    {columns.west1}\n                </div>\t       \n                <div className=\"droppable\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>this.onDrop(event, \"west2\")}>\n                    <span className=\"header small-header\">west 2</span>\n                    {columns.west2}\n                </div>\t \n                <div className=\"droppable\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>this.onDrop(event, \"west3\")}>\n                    <span className=\"header small-header\">west 3</span>\n                    {columns.west3}\n                </div>\t \n                <div className=\"droppable\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>this.onDrop(event, \"west4\")}>\n                    <span className=\"header small-header\">west 4</span>\n                    {columns.west4}\n                </div>\t\n            </div>  \n\n            <div className=\"drag-container drag-container-west\">\n                <div className=\"drag-west\"\n                    onDragOver={(event)=>this.onDragOver(event)}\n                    onDrop={(event)=>{this.onDrop(event, \"west\")}}>\n                <span className=\"header align-left\">west byes</span>\n                {columns.west}\n                </div>\n            </div>\n        </section>\n\n\t    );\n  \t}\n}\n","import React, { Component} from 'react';\nimport hockeyIcon from './assets/hockey_icon_large.png';\nimport ByeTeams from './components/ByeTeams/ByeTeams';\nimport matchups from './assets/matchups.json';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    matchups: matchups,\n    eastTeamByeChoices: new Array(4).fill(null),\n    westTeamByeChoices: new Array(4).fill(null)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return state;\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={hockeyIcon} className=\"logo\" alt=\"Hockey logo\" />\n        </header>\n\n        <main>\n          <ByeTeams />        \n        </main> \n      </div>\n    );\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}