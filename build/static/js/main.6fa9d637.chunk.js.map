{"version":3,"sources":["assets/hockey_icon_large.png","components/ByeTeams/ByeTeams.jsx","components/QualifyingRound/Matchups/Matchups.jsx","components/Results/QualifierResults.jsx","components/QualifyingRound/QualifyingRound.jsx","components/Results/RoundResults.jsx","components/Results/Results.jsx","components/Leaderboard/Leaderboard.jsx","components/SemiFinals/SemiFinals.jsx","components/HelperComponents/HelperComponents.jsx","components/MatchupWrapper/Matchups.jsx","components/MatchupWrapper/ConferenceHeaders.jsx","components/MatchupWrapper/Cup/Winner.jsx","components/MatchupWrapper/Cup/Cup.jsx","components/MatchupWrapper/MatchupWrapper.jsx","components/MatchupWrapper/MatchupInstructions/MatchupInstructions.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","Matchups","teamSelectHandler","this","props","teams","map","team","index","key","id","className","matchup","selected","conference","onClick","short","seed","draggable","src","alt","title","name","QualifierResults","userPicks","user","points","RoundResults","picks","picksPerUser","Leaderboard","defaultIndex","quarterfinalPicks","semifinalPicks","conferenceFinalPicks","leaders","Sidebar","image","content","DisabledButton","disabled","label","Button","qualifyingTeamsStatus","saveStatus","Fragment","byeTeamsStatus","event","save","Message","saveMessage","status","message","Input","nameChangeHandler","updateName","nameChanged","target","value","type","placeholder","defaultValue","onChange","required","nameStatus","Footer","teamData","round","ConferenceHeaders","Winner","winner","Cup","cup","MatchupWrapper","bind","setState","teamShort","eastWinner","westWinner","eastSeed","westSeed","state","filter","saveTeams","MatchupInstructions","App","byeTeams","qualifyingTeams","club","getLeaders","fetch","method","then","results","json","data","getUserPicks","getQuarterfinalPicks","getSemifinalPicks","getConferenceFinalPicks","checkIfNameIsTaken","checkIfReady","check","getCookie","count","i","saveByesToState","saveQualifyingTeamsToState","saveConferenceSemiFinalsToState","saveTeamsToState","getRequests","s2","s1","window","location","search","substring","length","split","r","decodeURIComponent","toLowerCase","saveRound","body","JSON","stringify","saveToDB","setCookie","cookieName","ca","document","cookie","c","charAt","indexOf","string","expiry","Date","setDate","getDate","hockeyIcon","final4Teams","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.6fa9d637.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hockey_icon_large.cc443e14.png\";","import React, { Component } from 'react';\nimport './ByeTeams.css';\nimport byeTeamData from './byeTeamData.json';\n\nexport default class ByeTeams extends Component {\n\n    constructor() {\n\t\tsuper();\n        this.state = byeTeamData;\n    }\n \n\tonDragStart = (event, team) => {\n        event.dataTransfer.setData(\"draggedTeamShort\", team.short);\n        event.dataTransfer.setData(\"draggedTeamType\", team.type);\n        event.dataTransfer.setData(\"draggedTeamConference\", team.conference);\n        const eligibleBox = team.type + \"-droppable-box\";\n        const eligibleSpots = document.getElementById(eligibleBox);\n        if (eligibleSpots !== null) {\n            // put a green box around the spots you can drag it to\n            eligibleSpots.style.border = \"2px solid var(--eligible)\";\n        }\n\n        // sets the cursor to a closed hand while they are grabbing a box\n        const box = document.getElementById(team.id);\n        box.style.cursor = \"grabbing\";\n    }\n    \n\tonDragOver = (event) => {\n        event.preventDefault();\n    }\n    \n    onDragEnd = (event, id) => {\n\n        const eastBoxes = document.getElementById(\"east-droppable-box\");\n        const westBoxes = document.getElementById(\"west-droppable-box\");\n        eastBoxes.style.border = \"2px solid black\";\n        westBoxes.style.border = \"2px solid black\";\n\n        // in case the user drops a box in the wrong spot, this sets the cursor back to an open hand instead of closed\n        const box = document.getElementById(id);\n        box.style.cursor = \"grab\";\n    }\n\n\tonDrop = (event, droppedTeamType) => {\n\n        event.preventDefault();\n        const droppedTeamConference = droppedTeamType.slice(0,4);\n\n        let draggedTeamShort = event.dataTransfer.getData(\"draggedTeamShort\");\n        let draggedTeamType = event.dataTransfer.getData(\"draggedTeamType\");\n        let draggedTeamConference = event.dataTransfer.getData(\"draggedTeamConference\");\n\n        // when dropping anywhere, put all borders back to normal\n        const eastBoxes = document.getElementById(\"east-droppable-box\");\n        const westBoxes = document.getElementById(\"west-droppable-box\");\n        eastBoxes.style.border = \"2px solid black\";\n        westBoxes.style.border = \"2px solid black\";\n\n        // if east is dragged into west (or vice versa), don't allow it to stay.\n        if (draggedTeamConference !== droppedTeamConference) {\n            return;\n        } else {\n            let teams;\n\n            // if team was dropped from the byes area\n            if (draggedTeamType === droppedTeamConference) {\n\n                // cycle through the teams and update their types\n                teams = this.state.byeSpots.teams.filter((team) => {\n                    if (team.type === droppedTeamType) {\n                        // if there is a team in this slot already, move it back to the byes area\n                        team.type = draggedTeamType;\n                    }\n                    if (team.short === draggedTeamShort) {\n                        // update the dragged team's type so it stays in the dropped slot\n                        team.type = droppedTeamType;\n                    }\n                    return team;\n                });\n            } else {\n                // team was dragged from one slot to another\n\n                // cycle through the teams to update the dragged and dropped slot types\n                teams = this.state.byeSpots.teams.filter((team) => {\n                    if (team.type === droppedTeamType && droppedTeamType !== \"east\" && droppedTeamType !== \"west\") {\n                        // update team in target spot to the dragged team's old spot\n                        team.type = draggedTeamType;\n                    }\n                    if (team.short === draggedTeamShort) {\n                        // update the dragged team's type so it stays in the dropped slot\n                        team.type = droppedTeamType;\n                    }\n                    return team;\n                });\n            };\n\n            this.setState({\n                ...this.state,\n                teams\n            });\n\n            let saveByes = this.props.saveByes;\n            saveByes(teams);\n        };\n    }\n\n\trender() {\n\t\tvar columns = {\n          west: [],\n          west1: [],\n          west2: [],\n          west3: [],\n          west4: [],\n          east1: [],\n          east2: [],\n          east3: [],\n          east4: [],\n          east: []\n        }\n\n\t\tthis.state.byeSpots.teams.forEach ((team) => {\n        columns[team.type].push(\n            <div key={team.id} \n                id={team.id}\n                onDragStart = {(event) => this.onDragStart(event, team)}\n                onDragOver = {(event) => this.onDragOver(event)}\n                onDragEnd = {(event) => this.onDragEnd(event, team.id)}\n                draggable\n                className=\"team-wrapper\"\n\t\t    >\n                <div className=\"logo-wrapper\">\n                    <div className=\"seed\">\n                        {team.seed}   \n                    </div>\n                    <img className=\"team-logo\" \n                        draggable=\"false\"\n                        src={`/teamLogos/${team.short}.png`}\n                        alt={team.short} \n                        title={team.name}\n                    />\n                </div>\n                <div className=\"team-info\">\n                    <span className=\"team-short\">{team.short}</span>\n                </div>\n\t\t      \n\t\t    </div>\n\t\t  );\n        });\n\n\t    return (\n            <React.Fragment>\n                <h2 className=\"round-robin\">Bye Team Round Robin</h2>\n                <div className=\"instructions\">\n                    <ul>\n                        <li><span className=\"scoring\">Bonus round -</span>  Drag and drop the teams in the order you think they will finish.</li>\n                        <li>\n                            <span className=\"scoring\">Scoring: </span> \n                            <span className=\"num\">2 points</span> for each conference that has the order correct (must be perfect).\n                        </li>   \n                    </ul>\n\n                </div>\n                <section className=\"bye-team-round\">\n\n                    <div className=\"drag-container drag-container-west\">\n                        <div className=\"drag-west\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>{this.onDrop(event, \"west\")}}>\n                            <h3 className=\"header align-right\">west byes</h3>\n                        {columns.west}\n                        </div>\n                    </div>\n\n                    <div className=\"drop-container\" id=\"west-droppable-box\">\n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west1\")}>\n                            <span className=\"header small-header\">west 1</span>\n                            {columns.west1}\n                        </div>\t       \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west2\")}>\n                            <span className=\"header small-header\">west 2</span>\n                            {columns.west2}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west3\")}>\n                            <span className=\"header small-header\">west 3</span>\n                            {columns.west3}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"west4\")}>\n                            <span className=\"header small-header\">west 4</span>\n                            {columns.west4}\n                        </div>\t\n                    </div>  \n\n                    <div className=\"drop-container\" id=\"east-droppable-box\">\n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east1\")}>\n                            <span className=\"header small-header\">east 1</span>\n                            {columns.east1}\n                        </div>\t       \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east2\")}>\n                            <span className=\"header small-header\">east 2</span>\n                            {columns.east2}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east3\")}>\n                            <span className=\"header small-header\">east 3</span>\n                            {columns.east3}\n                        </div>\t \n                        <div className=\"droppable\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>this.onDrop(event, \"east4\")}>\n                            <span className=\"header small-header\">east 4</span>\n                            {columns.east4}\n                        </div>\t\n                    </div>  \n\n                    <div className=\"drag-container drag-container-east\">\n                        <div className=\"drag-east\"\n                            onDragOver={(event)=>this.onDragOver(event)}\n                            onDrop={(event)=>{this.onDrop(event, \"east\")}}>\n                            <h3 className=\"header align-left\">east byes</h3>\n                            {columns.east}\n                        </div>\n                    </div>\n\n                </section>\n\n            </React.Fragment>\n\n\t    );\n  \t}\n}\n","import React, { Component } from 'react';\nimport './Matchups.css';\n\n\nexport default class Matchups extends Component {\n\n    render() {\n        var teamSelectHandler = this.props.teamSelectHandler;\n\n        return this.props.teams.teams.map((team, index) => {\n            return (\n                <li \n                    key={team.id} \n                    className={`matchup-${team.matchup} ${team.selected} ${team.conference}`}\n                    onClick={() => teamSelectHandler(team.short, team.matchup)}\n                >\n                    <div className=\"logo-wrapper\">\n                        <div className=\"seed\">\n                            {team.seed}\n                        </div>\n                        <img className=\"team-logo\" \n                            draggable=\"false\"\n                            src={`/teamLogos/${team.short}.png`}\n                            alt={team.short} \n                            title={team.name}\n                        />\n                    </div>\n                    <div className=\"team-info\">\n                        <span className=\"team-short\">{team.short}</span>\n                    </div>\n                </li>\n              );\n        });\n    }\n}\n","import React, { Component } from 'react';\n// import './Leaderboard.css';\n\nexport default class QualifierResults extends Component {\n\n  render() {\n\t\tif (this.props.userPicks !== null) {\n\t\t\treturn (\n\t\t\t\tthis.props.userPicks.map(\n\t\t\t\t\t(team, index) => {\n\t\t\t\t\t\tif (index % 10 === 0) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t<h3 className=\"user-name\">{team.user}</h3>\n\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"round-robin\">East round robin:\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"points\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (team.points === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"❌\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!team.points)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"--\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"✅ \" + \"+\" + team.points\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else if (index % 10 - 1 === 0) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"round-robin\">West round robin:\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"points\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (team.points === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"❌\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!team.points)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"--\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"✅ \" + \"+\" + team.points\n\t\t\t\t\t\t\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<div className=\"round-robin\">Qualifying Round: </div>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\telse {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"logo-wrapper team-points\">\t\n\t\t\t\t\t\t\t\t\t\t\t<img className=\"team-logo\" \n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/teamLogos/${team.team}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\talt={team.team} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={team.team}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"points\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (team.points === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"❌\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!team.points)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"--\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"✅ \" + \"+\" + team.points\n\t\t\t\t\t\t\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t// { () => { return \"</div>\" } \n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n    } else {\n      return (\n        <div />\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './QualifyingRound.css';\n// import QualifyingRoundData from './qualifyingRoundData.json';\nimport QuarterfinalRoundData from './quarterfinalRoundData.json';\nimport Matchups from './Matchups/Matchups';\n\nexport default class QualifyingRound extends Component {\n    constructor() {\n\t\tsuper();\n        this.state = QuarterfinalRoundData;\n        this.teamSelectHandler = this.teamSelectHandler.bind(this);\n        // this.saveTeamsHandler = this.saveTeamsHandler.bind(this);\n    }\n\n    teamSelectHandler(teamShort, matchup) {\n\n        let teams = this.state.teams.filter((team) => {\n\n            if (team.short === teamShort) {\n                team.selected = true;\n            }\n            if (team.matchup === matchup && team.short !== teamShort) {\n                team.selected = false;\n            }\n\n            return team;\n        });\n\n        this.setState({\n            ...this.state,\n            teams\n        })\n\n        let saveQualifiers = this.props.saveQualifiers;\n        saveQualifiers(this.state);\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"instructions\">\n                    <ul>\n                        <li>For each matchup, click on the team you think will win.</li>\n                        <li>\n                            <span className=\"scoring\">Scoring: </span> \n                            <span className=\"num\">1 point</span> for each correct pick, and &nbsp;\n                            <span className=\"num\">1 bonus point</span> for picking a&nbsp;\n                            <div className=\"seed inline-seed\">7</div> or lower seed upset.\n                        </li>\n                    </ul>\n                </div>\n                <section className=\"qualifying-round\">\n                    <div>\n                        <h3 className=\"header align-left\">west matchups</h3>\n                        <h3 className=\"header align-left\" id=\"east-matchups\">east matchups</h3>\n\n                        <ul className=\"matchups\">\n                            { \n                                React.Children.toArray(\n                                    <Matchups\n                                        teams={this.state}\n                                        teamSelectHandler={this.teamSelectHandler}\n                                    ></Matchups>\n                                )\n                            }\n                        </ul>\n                    </div>\n\n                </section>\n\n            </React.Fragment>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\nexport default class RoundResults extends Component {\n\n  render() {\n    return (\n      this.props.picks.map(\n        (team, index) => {\n          return(\n            <li key={index}>\n              {index % this.props.picksPerUser === 0 && (\n              <h3 className=\"user-name\">{team.name}</h3>\n              )}\n              <div className=\"logo-wrapper team-points\">\t\n                  {team.matchup === \"finals\" && (\n                    <img className=\"small-cup\" src=\"/cup.png\" alt=\"\" />\n                  )}\n                  {team.matchup === \"e1\" && (\n                    <p>East</p>\n                  )}\n                  {team.matchup === \"w1\" && (\n                    <p>West</p>\n                  )}\n                  <img className=\"team-logo\" \n                    src={`/teamLogos/${team.team}.png`}\n                    alt={team.team} \n                    title={team.team}\n                  />\n                  <div className=\"points\">\n                    {\n                      (() => {\n                          if (team.points === 0)\n                              return \"❌\"\n                          if (!team.points)\n                              return \"--\"\n                          else\n                              return \"✅ \" + \"+\" + team.points\n                      })()\n                    }\n                  </div>\n                </div>\n            </li>\n          );\n        }\n      )\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport QualifierResults from './QualifierResults';\nimport RoundResults from './RoundResults';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nexport default class Leaderboard extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Tabs defaultIndex={3}>\n\t\t\t\t<TabList>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Tab><div className=\"tab small-tab\">Qualifiers</div></Tab>\n\t\t\t\t\t\t\t<Tab><div className=\"tab small-tab\">Conf Quarterfinals</div></Tab>\n\t\t\t\t\t\t\t<Tab><div className=\"tab small-tab\">Conf Semifinals</div></Tab>\n\t\t\t\t\t\t\t<Tab><div className=\"tab small-tab\">Final 4</div></Tab>\n\t\t\t\t\t</div>\n\t\t\t\t</TabList>\n\n\t\t\t\t<TabPanel>\n\t\t\t\t\t{this.props.userPicks !== null && (\n\t\t\t\t\t<QualifierResults \n\t\t\t\t\t\tuserPicks = {this.props.userPicks}\n\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t{this.props.quarterfinalPicks !== null && (\n\t\t\t\t\t<RoundResults \n\t\t\t\t\t\tpicks = {this.props.quarterfinalPicks}\n\t\t\t\t\t\tpicksPerUser = {8}\n\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t{this.props.semifinalPicks !== null && (\n\t\t\t\t\t<RoundResults \n\t\t\t\t\t\tpicks = {this.props.semifinalPicks}\n\t\t\t\t\t\tpicksPerUser = {4}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t{this.props.conferenceFinalPicks !== null && (\n\t\t\t\t\t<RoundResults \n\t\t\t\t\t\tpicks = {this.props.conferenceFinalPicks}\n\t\t\t\t\t\tpicksPerUser = {3}\n\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</TabPanel>\n\t\t\t</Tabs>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport './Leaderboard.css';\n\nexport default class Leaderboard extends Component {\n\n\trender() {\n    if (this.props.leaders !== null) {\n\t\t\treturn (\n\t\t\t\tthis.props.leaders.map(\n          (team, index) => {\n\t\t\t\t\t\treturn (\n              <li key={index}>\n                <div>{team.name}</div>\n                <div>{team.points}</div>\n              </li>\n            )\n          }\n        )\n      )\n    } else {\n      return (\n        <div />\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './semiFinals.css';\nimport SemiFinalData from './semiFinalRoundData.json';\nimport Matchups from '../QualifyingRound//Matchups/Matchups';\n\nexport default class SemiFinals extends Component {\n    constructor() {\n\t\tsuper();\n        this.state = SemiFinalData;\n        this.teamSelectHandler = this.teamSelectHandler.bind(this);\n    }\n\n    teamSelectHandler(teamShort, matchup) {\n\n        let teams = this.state.teams.filter((team) => {\n\n            if (team.short === teamShort) {\n                team.selected = true;\n            }\n            if (team.matchup === matchup && team.short !== teamShort) {\n                team.selected = false;\n            }\n\n            return team;\n        });\n\n        this.setState({\n            ...this.state,\n            teams\n        })\n\n        let saveConferenceSemiFinals = this.props.saveConferenceSemiFinals;\n        saveConferenceSemiFinals(this.state);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"instructions\">\n                    <ul>\n                        <li>For each matchup, click on the team you think will win.</li>\n                        <li>\n                            <span className=\"scoring\">Scoring: </span> \n                            <span className=\"num\">1 point</span> for each correct pick in the conference semifinals.<br />\n                            <span className=\"num\">2 points</span> for each correct pick in the conference finals.<br />\n                            <span className=\"num\">3 points</span> for each correct pick in the finals.<br />\n                            <span className=\"num\">4 points</span> for correctly picking the Stanley Cup winner.<br />\n                        </li>\n                    </ul>\n                </div>\n                <section className=\"qualifying-round semifinals\">\n                    <div>\n                        <h3 className=\"header align-left\">west matchups</h3>\n                        <h3 className=\"header align-left\" id=\"east-matchups\">east matchups</h3>\n                        <ul className=\"matchups\">\n                            { \n                              React.Children.toArray(\n                                <Matchups\n                                    teams={this.state}\n                                    teamSelectHandler={this.teamSelectHandler}\n                                ></Matchups>\n                              )\n                            }\n                        </ul>\n                    </div>\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n","import React from 'react';\n\nexport function Sidebar(props) {\n    if (props.image) {\n        return (\n            <aside className={props.className}>\n                <img src={props.image} className=\"logo\" alt=\"Hockey logo\" />\n            </aside>\n        );\n    }\n    return (\n        <aside className={props.className}>\n            {props.content}\n        </aside>\n    )\n}\n\nexport function DisabledButton(props) {\n    return (\n        <button disabled={true} className={props.className} title=\"Finish making your picks and enter your name!\">\n            {props.label}\n        </button>)\n    ;    \n}\n\nexport function Button(props) {\n\n    const saveHandler = (event) => {\n        let save = props.save;\n        save();\n    }\n\n    if (\n        // props.byeTeamsStatus === \"ready\" \n        props.qualifyingTeamsStatus === \"ready\" \n        // && props.nameStatus === \"available\"\n        && props.saveStatus !== \"saved\"\n        ) {\n        return (\n            <React.Fragment>\n\n                <button \n                    className={props.byeTeamsStatus}\n                    onClick={saveHandler}\n                >\n                    {props.label}\n                </button>\n                <Message\n                    saveStatus={props.saveStatus}\n                    saveMessage={props.saveMessage}\n\n                />\n            </React.Fragment>\n\n        );\n    }\n    \n    return (\n        <React.Fragment>\n            <DisabledButton \n                className=\"disabled-button\"\n                label={props.label}\n            />\n            <Message\n                saveStatus={props.saveStatus}\n                saveMessage={props.saveMessage}\n            />\n        </React.Fragment>\n    );\n}\n\nexport function Message(props) {\n    if (props.status === null || props.saveStatus === null) {\n        return \" \"\n    }\n\n    let message = \"🚫\"\n    if (props.status === \"available\" || props.saveStatus === \"saved\") {\n        message = \"✅\"\n    }\n    return (\n        <div className={`status ${props.status} ${props.saveStatus}`}>\n            {message} {props.saveMessage}\n        </div>\n    );\n}\n\nexport function Input(props) {\n\n    const nameChangeHandler = (event) => {\n        let updateName = props.nameChanged;\n        updateName(event.target.value);\n    }\n    if (props.user !== null) {\n        return (\n            <div className=\"name-input\">\n                <input \n                    id=\"input\"\n                    type=\"name\"\n                    placeholder=\"name / username\"\n                    // value=\"\"\n                    defaultValue={props.user}\n                    onChange={(event) => nameChangeHandler(event)}\n                    required={true}\n                />&nbsp;\n                <Message\n                    status={props.nameStatus}\n                />\n            </div>\n        );\n    } else {\n    \n        return (\n            <div className=\"name-input\">\n                <input \n                    type=\"name\"\n                    placeholder=\"name / username\"\n                    value=\"\"\n                    onChange={(event) => nameChangeHandler(event)}\n                />&nbsp;\n                {/* <Message\n                    status={props.nameStatus}\n                /> */}\n            </div>\n        );\n    }\n}\n\nexport function Footer(props) {\n    return (\n        <div className=\"footer\" />\n    )\n\n}\n","import React, { Component } from 'react';\nimport './Matchups.css';\n\n\nexport default class Matchups extends Component {\n\n    render() {\n        var teamSelectHandler = this.props.teamSelectHandler;\n\n        return this.props.teamData.teams.map((team, index) => {\n            if (team.short === \"\" || team.id === \"winner\") {   \n                return (\n                    <li \n                        className=\"null invisible\"\n                    />\n                )\n            }\n            else {\n                return (\n                    <li \n                        key={index} \n                        className={`matchup-${team.matchup} ${team.selected} ${team.conference} round-${team.round}`}\n                        onClick={() => teamSelectHandler(team.short, team.matchup, this.props.round)}\n                    >\n                        <div className=\"logo-wrapper\">\n                            <div className=\"seed\">\n                                {team.seed}\n                            </div>\n                            <img className=\"team-logo\" \n                                draggable=\"false\"\n                                src={`/teamLogos/${team.short}.png`}\n                                alt={team.short} \n                                title={team.name}\n                            />\n                        </div>\n                        <div className=\"team-info\">\n                            <span className=\"team-short\">{team.short}</span>\n                        </div>\n                    </li>\n                );\n            }\n        });\n    }\n}\n","import React, { Component } from 'react';\nimport './Matchups.css';\n\nexport default function ConferenceHeaders(props) {\n  if (props.round === 1) {\n    return(\n      <React.Fragment>\n        <h3 className=\"header align-left\" id=\"west-matchups\">west matchups</h3>\n        <h3 className=\"header align-left\" id=\"east-matchups\">east matchups</h3>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport '../Matchups.css';\n\nexport default function Winner(props) {\n  if (props.winner !== null) {\n    return(\n      <img className=\"team-logo winner\" \n        draggable=\"false\"\n        src={`/teamLogos/${props.winner}.png`}\n        alt=\"\"\n        title={props.winner}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport '../Matchups.css';\nimport Winner from './Winner';\n\nexport default function Cup(props) {\n\n  if (props.cup === true) {\n    return(\n      <div className=\"cup-wrapper\">\n        <img className=\"cup\" src=\"/cup.png\" alt=\"\"/>\n        <Winner\n          winner={props.teamData.teams[6].short} \n        />\n      </div>\n    );\n  } else {\n    return(\n      <span />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Matchups.css';\nimport Matchups from './Matchups';\nimport ConferenceHeaders from './ConferenceHeaders';\nimport Cup from './Cup/Cup';\n\nexport default class MatchupWrapper extends Component {\n  constructor() {\n  super();\n      this.teamSelectHandler = this.teamSelectHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ \n      teams: this.props.teamData\n    })\n  }\n\n  teamSelectHandler(teamShort, matchup, round) {\n\n    let eastWinner, westWinner, eastSeed, westSeed, winner;\n\n    // cycle through and update teams \n    let teams = this.state.teams.teams.filter((team) => {\n      if (team.short === teamShort) {\n        team.selected = true;\n        if (team.matchup == \"w1\") {\n          westWinner = team.short;\n          westSeed = team.seed;\n        }\n        if (team.matchup == \"e1\") {\n          eastWinner = team.short;\n          eastSeed = team.seed;\n        }\n        if (team.matchup == \"finals\") {\n          winner = team.short;\n        }\n      }\n      if (team.matchup === matchup && team.short !== teamShort) {\n        team.selected = false;\n      }\n\n      return team;\n    });\n\n    // cycle through again and update the next round if necessary\n    teams = teams.filter((team) => {\n\n      if (team.id == \"ef\" && eastWinner) {\n        team.short = eastWinner;\n        team.seed = eastSeed;\n      }\n      if (team.id == \"wf\" && westWinner) {\n        team.short = westWinner;\n        team.seed = westSeed;\n      }\n      if (team.id == \"winner\" && winner) {\n        team.short = winner;\n      }\n\n      return team;\n    });\n\n    this.setState({\n      teams: {\n        teams: teams\n      }\n    })      \n\n    let saveTeams = this.props.saveTeams;\n    saveTeams(this.state.teams);\n  }\n\n  render() {\n\n    if (this.props.teamData) {\n      return (\n        <section className=\"matchup-wrapper\">\n          <div>\n            <ConferenceHeaders \n              round = {this.props.round}\n            />\n            <Cup \n              cup = {this.props.cup}\n              teamData={this.props.teamData}\n            />\n            <ul className=\"matchups\">\n              <Matchups\n                teamData={this.props.teamData}\n                teamSelectHandler={this.teamSelectHandler}\n                round={this.props.round}\n              ></Matchups>\n            </ul>\n          </div>\n        </section>\n      );\n    } else {\n      return (<div />)\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport '../Matchups.css';\n\nexport default function MatchupInstructions(props) {\n\n  return (\n    <div className=\"instructions\">\n      <ul>\n          <li>For each matchup, click on the team you think will win.</li>\n          <li>\n              <span className=\"scoring\">Scoring: </span> \n              <span className=\"num\">1 point</span> for each correct conference final pick. &nbsp;\n              <span className=\"num\">3 points</span> for picking the Stanley Cup winner. &nbsp;\n\n              {/* <span className=\"num\">1 bonus point</span> for picking a&nbsp; */}\n              {/* <div className=\"seed inline-seed\">7</div> or lower seed upset. */}\n          </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { Component} from 'react';\nimport hockeyIcon from './assets/hockey_icon_large.png';\nimport ByeTeams from './components/ByeTeams/ByeTeams';\nimport QualifyingRound from './components/QualifyingRound/QualifyingRound';\nimport Results from './components/Results/Results';\nimport Leaderboard from './components/Leaderboard/Leaderboard';\nimport SemiFinals from './components/SemiFinals/SemiFinals';\nimport { Sidebar, Button, Input, Footer } from './components/HelperComponents/HelperComponents';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './App.css';\nimport 'react-tabs/style/react-tabs.css';\nimport MatchupWrapper from './components/MatchupWrapper/MatchupWrapper';\nimport MatchupInstructions from './components/MatchupWrapper/MatchupInstructions/MatchupInstructions';\nimport conferenceSemiFinals from './assets/semiFinalRoundData.json';\nimport qualifyingTeams from './assets/qualifyingRoundData.json';\nimport final4Teams from './assets/final4data.json';\n\n\nclass App extends Component {\n\n  state = {\n    byeTeamsStatus: \"ready\",\n    byeTeams: null,\n    qualifyingTeamsStatus: \"not_ready\",\n    qualifyingTeams: null,\n    teams: null,\n    name: null,\n    nameStatus: null,\n    saveStatus: null,\n    saveMessage: null,\n    club: null,\n    leaders: null,\n    user: null,\n    userPicks: null,\n    quarterfinalPicks: null,\n    semifinalPicks: null,\n    conferenceFinalPicks: null\n  }\n\n  componentDidMount() {\n    let user = this.getCookie(\"user\");\n    if (this.state.user === null) {\n      this.setState({user: user})\n    }\n    this.getLeaders();\n    this.getUserPicks();\n    this.getQuarterfinalPicks();\n    this.getSemifinalPicks();\n    this.getConferenceFinalPicks();\n  }\n\n  getLeaders = () => {\n    fetch('/api/leaderboard', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ leaders: data.leaders }));\n  }\n\n  getUserPicks = () => {\n    fetch('/api/user_picks', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ userPicks: data.picks }));\n  }\n\n  getQuarterfinalPicks = () => {\n    fetch('/api/quarterfinal_picks', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ quarterfinalPicks: data.picks }));\n  }\n  \n  getSemifinalPicks = () => {\n    fetch('/api/semifinal_picks', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ semifinalPicks: data.picks }));\n  }\n\n  getConferenceFinalPicks = () => {\n    fetch('/api/conferencefinal_picks', {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ conferenceFinalPicks: data.picks }));\n  }\n\n  checkIfNameIsTaken = (name) => {\n    fetch('/names/' + name, {\n      method: 'GET',\n    })\n    .then(results => results.json())\n    .then(data => this.setState({ nameStatus: data.status }));\n  }\n\n  checkIfReady = (check) => {\n    let user = this.getCookie(\"user\");\n    this.setState({user: user});\n\n    let count = 0;\n\n    if (check === \"qualifyingTeams\") {\n      for (let i=0; i < 16; i++) {\n        if (this.state.qualifyingTeams.teams[i].selected === true) {\n          count += 1\n        }\n      }\n      if (count >= 8) {\n        this.setState({qualifyingTeamsStatus: \"ready\"});\n      }\n    } else if (check === \"byeTeams\") {\n      for (let i=1; i < 8; i++) {\n        if ((this.state.byeTeams[i].type === \"east\") || (this.state.byeTeams[i].type === \"west\")) {\n          this.setState({byeTeamsStatus: \"not_ready\"});\n          return\n        }\n      }\n      if (count === 0) {\n        this.setState({byeTeamsStatus: \"ready\"});\n      }\n    } else if (check === \"conferenceSemiFinals\") {\n        for (let i=0; i < 8; i++) {\n          if (this.state.teams[i].selected === true) {\n            count += 1\n          }\n        }\n        if (count >= 4) {\n          this.setState({qualifyingTeamsStatus: \"ready\"});\n        }\n    } else {\n      // final 4\n      for (let i=0; i < 6; i++) {\n        if (this.state.teams[i].selected === true) {\n          count += 1\n        }\n      }\n      if (count >= 3) {\n        this.setState({qualifyingTeamsStatus: \"ready\"});\n      }\n    }\n  }\n\n  saveByesToState = (teams) => {\n    this.setState({\n      byeTeams: teams\n    }, () => {\n      this.checkIfReady(\"byeTeams\");\n    });\n  }\n\n  saveQualifyingTeamsToState = (teams) => {\n    this.setState({\n      qualifyingTeams: teams\n    }, () => {\n      this.checkIfReady(\"qualifyingTeams\");\n    });    \n  }\n\n  saveConferenceSemiFinalsToState = (teams) => {\n    this.setState({\n      teams: teams.teams\n    }, () => {\n      this.checkIfReady(\"conferenceSemiFinals\")\n    });\n  }\n\n  saveTeamsToState = (teams) => {\n    this.setState({\n      teams: teams.teams\n    }, () => {\n      this.checkIfReady(\"final4\")\n    });\n  }\n\n  getRequests = () => {\n    let s1 = window.location.search.substring(1, window.location.search.length).split('&'),\n        r = {}, s2, i;\n    for (i = 0; i < s1.length; i += 1) {\n        s2 = s1[i].split('=');\n        r[decodeURIComponent(s2[0]).toLowerCase()] = decodeURIComponent(s2[1]);\n    }\n    return r;\n  }\n\n  nameChangeHandler = (name) => {\n    if (name.length === 0) {\n      this.setState( {\n        nameStatus: null\n      })\n    }\n\n    this.setState( {\n      user: name\n    }, () => {\n      if (name !== null) {\n        this.setState({nameStatus: \"available\"});\n      }\n    });\n  }\n\n  saveRound = () => {\n    fetch('/api/save_round', {\n      method: 'POST',\n      body: JSON.stringify(\n        { \n          name: this.state.user,\n          picks: this.state.teams\n        }\n      )\n    })\n    .then(results => results.json())\n    .then(data => this.setState({saveStatus: data.status, saveMessage: data.message}))\n  }\n\n  saveToDB = () => {\n    let club = this.getRequests().club;\n    this.setCookie(\"club\", club);\n    this.setCookie(\"user\", this.state.name);\n\n    fetch('/api/save', {\n      method: 'POST',\n      body: JSON.stringify(\n        { \n          name: this.state.name,\n          byeTeams: this.state.byeTeams,\n          qualifyingTeams: this.state.qualifyingTeams,\n          club: club\n        }\n      )\n    })\n    .then(results => results.json())\n    .then(data => this.setState({saveStatus: data.status, saveMessage: data.message}))\n  }\n\n  getCookie = (cookieName) => {\n    let name = cookieName + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  setCookie = (string, value) => {\n    const expiry = new Date(); \n    expiry.setDate(expiry.getDate() + 90)\n    document.cookie = string + \"=\" + value + \"; expires=\" + expiry\n  }\n\n  render() {\n    return (\n      <main>\n        <section>\n          <h1>2020 NHL Playoff Pool</h1>\n        </section>\n        <Sidebar \n          className=\"left-aside\"\n          image={hockeyIcon}\n        />\n\n        <Tabs defaultIndex={2}>\n          <TabList>\n            <div>\n              <Tab><div className=\"tab\">Final 4</div></Tab>\n              <Tab><div className=\"tab\">Leaderboard</div></Tab>\n              <Tab><div className=\"tab\">Full Results</div></Tab>\n            </div>\n          </TabList>\n\n          <TabPanel>\n            <h2>Final 4</h2>\n            <MatchupInstructions \n            />\n            <MatchupWrapper\n              saveTeams={this.saveTeamsToState}\n              teamData = {final4Teams}\n              round = {1}\n              cup = {true}\n            />\n            <Input \n              type=\"text\"\n              nameChanged={this.nameChangeHandler}\n              nameStatus={this.state.nameStatus}\n              user={this.state.user}\n            />\n            <Button \n              name = {this.state.user}\n              save = {this.saveRound}\n              nameStatus = {this.state.nameStatus}\n              qualifyingTeamsStatus = {this.state.qualifyingTeamsStatus}\n              label=\"Submit picks\"\n              saveStatus = {this.state.saveStatus}\n              saveMessage = {this.state.saveMessage}\n            /> \n          </TabPanel>\n          <TabPanel>\n            <ul className=\"leaders\">\n              <Leaderboard \n                leaders={this.state.leaders}\n                user={this.state.user}\n              />\n            </ul>\n          </TabPanel>\n          <TabPanel>\n            <ul className=\"results\">\n              <Results\n                user={this.state.user}\n                userPicks={this.state.userPicks}\n                quarterfinalPicks={this.state.quarterfinalPicks}\n                semifinalPicks={this.state.semifinalPicks}\n                conferenceFinalPicks={this.state.conferenceFinalPicks}\n              />\n            </ul>\n          </TabPanel>       \n        </Tabs>\n\n        {/* \n        <ByeTeams \n          saveByes= {this.saveByesToState}\n          byeStatus={this.state.byeStatus}\n        />    \n        <Input \n          type=\"text\"\n          nameChanged={this.nameChangeHandler}\n          nameStatus={this.state.nameStatus}\n          value={this.state.name}\n        />\n        <Button \n          name = {this.state.name}\n          save = {this.saveToDB}\n          nameStatus = {this.state.nameStatus}\n          byeTeamsStatus ={this.state.byeTeamsStatus}\n          qualifyingTeamsStatus = {this.state.qualifyingTeamsStatus}\n          label=\"Submit picks\"\n          saveStatus = {this.state.saveStatus}\n          saveMessage = {this.state.saveMessage}\n        /> */}\n        <Sidebar \n          className=\"right-aside\"\n        />\n        <Footer />\n      </main>\n    );\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}